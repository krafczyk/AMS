##### MACROS #####

ROOTH         = TTree.h TFile.h TH1.h

SRCS          = AMSR_Root.cxx AMSR_Maker.cxx \
		AMSR_Axis.cxx \
		AMSR_GeometrySetter.cxx \
		AMSR_3DCluster.cxx \
		AMSR_ToFCluster.cxx AMSR_ToFClusterReader.cxx \
		AMSR_AntiCluster.cxx AMSR_AntiClusterReader.cxx \
		AMSR_TrMCCluster.cxx AMSR_TrMCClusterReader.cxx \
		AMSR_Track.cxx AMSR_TrackReader.cxx \
		AMSR_SiHit.cxx AMSR_SiHitReader.cxx \
		AMSR_CTCCluster.cxx AMSR_CTCClusterReader.cxx \
		AMSR_Particle.cxx AMSR_ParticleReader.cxx \
		AMSR_MCParticle.cxx AMSR_MCParticleReader.cxx \
		AMSR_VirtualDisplay.cxx \
		AMSR_HistBrowser.cxx \
		AMSR_Canvas.cxx \
		AMSR_Display.cxx TGRunEventDialog.cxx \
		TRadioButton.cxx TSwitch.cxx Debugger.cxx
		# MySelectionDialog.cxx \
		# MOTIF_DialogManager.cxx 
		# AMSR_ColorManager.cxx 

HDRS          = TRadioButton.h TSwitch.h \
		AMSR_Axis.h \
		AMSR_3DCluster.h \
		AMSR_Maker.h AMSR_HistBrowser.h AMSR_Root.h \
		AMSR_ToFCluster.h AMSR_ToFClusterReader.h \
		AMSR_AntiCluster.h AMSR_AntiClusterReader.h \
		AMSR_TrMCCluster.h AMSR_TrMCClusterReader.h \
		AMSR_Track.h AMSR_TrackReader.h \
		AMSR_SiHit.h AMSR_SiHitReader.h \
		AMSR_CTCCluster.h AMSR_CTCClusterReader.h \
		AMSR_Particle.h AMSR_ParticleReader.h \
		AMSR_MCParticle.h AMSR_MCParticleReader.h \
		AMSR_VirtualDisplay.h \
		Debugger.h \
		AMSR_Canvas.h \
		AMSR_GeometrySetter.h \
		AMSR_Display.h TGRunEventDialog.h \
                LinkDef.h
		# MySelectionDialog.h \
		# AMSR_ColorManager.h 

SRCSG         = # AMSR_Display.cxx 		# AMSR_Fruit.cxx 

HDRSG         = # AMSR_Display.h GLinkDef.h

		# AMSR_Fruit.h
		# ATLFDisplay.h ATLFParticle.h ATLFFruit.h GLinkDef.h 
                

DICT          = AMSR_Cint.cxx
DICTH         = $(DICT:.cxx=.h)
DICTO         = $(DICT:.cxx=.o)

DICTG         = # AMSR_gCint.cxx
DICTGH        = # $(DICTG:.cxx=.h)
DICTGO        = # $(DICTG:.cxx=.o)

MAIN          = main.cxx
MAINO         = $(MAIN:.cxx=.o)

MAINC          = mainc.cxx
MAINOC         = $(MAINC:.cxx=.o)

MAINV          = mainv.cxx
MAINOV         = $(MAINV:.cxx=.o)

OBJS          = $(SRCS:.cxx=.o) $(DICTO)

OBJSG         = # $(SRCSG:.cxx=.o) $(DICTGO)

ALLDICT       = $(DICT) $(DICTH) $(DICTG) $(DICTGH)
ALLSRCS       = $(SRCS) $(SRCSG) $(HDRS) $(HDRSG) $(ALLDICT) $(MAIN)
ALLOBJS       = $(OBJS) $(OBJSG) $(MAINO)


AMSR_LIB       = libAMS.a

AMSR_SHAREDLIB = libAMS.so

#AMSR_GLIB      = libAMSR_g.so

AMSR_PRG       = amsed
AMSR_PRGC       = amsedc
AMSR_PRGV       = amsedv



##### TARGETS #####
interprete:  $(AMSR_SHAREDLIB)

standalone:  $(AMSR_PRG)

realtime:  $(AMSR_PRGC)

projector:  $(AMSR_PRGV)

$(AMSR_LIB):     $(DICT) $(OBJS)
		rm -f $(AMSR_LIB)
		-$(SHLD) -o $(AMSR_LIB) $(OBJS)
		chmod 555 $(AMSR_LIB)
		@echo "$(AMSR_LIB) done with $(OBJS) linked in"

$(AMSR_SHAREDLIB):     $(DICT) $(OBJS)
		rm -f $(AMSR_SHAREDLIB)
		-$(SHLD) -o $(AMSR_SHAREDLIB) $(OBJS) $(SOLIBS) 
		chmod 555 $(AMSR_SHAREDLIB)
		@echo "$(AMSR_SHAREDLIB) done with $(OBJS) linked in"


$(AMSR_PRG):	$(AMSR_SHAREDLIB) $(MAINO)
		$(LD) $(LDFLAGS) $(MAINO) $(AMSR_SHAREDLIB) $(GLIBS) -o $(AMSR_PRG) 

$(AMSR_PRGC):	$(AMSR_SHAREDLIB) $(MAINOC)
		$(LD) $(LDFLAGS) $(MAINOC) $(AMSR_SHAREDLIB) $(GLIBS) -o $(AMSR_PRGC) 


$(AMSR_PRGV):	$(AMSR_SHAREDLIB) $(MAINOV)
		$(LD) $(LDFLAGS) $(MAINOV) $(AMSR_SHAREDLIB) $(GLIBS) -o $(AMSR_PRGV) 


$(DICT):        $(HDRS)
		@echo "Generating dictionary ..."
		rootcint -f $(DICT) -c $(ROOTH) $(HDRS)

$(DICTG):       $(HDRSG)
		@echo "Generating display dictionary ..."
		rootcint -f $(DICTG) -c $(HDRSG)

$(DICTO):       $(DICT)
		$(CXX) $(NOOPT) $(CXXFLAGS) -c $(DICT)

$(DICTGO):      $(DICTG)
		$(CXX) $(NOOPT) $(CXXFLAGS) -c $(DICTG)

depend:
		makedepend -fMake-depend -- $(CXXFLAGS) -- $(SRCS) $(SRCSG) \
		$(MAIN)

dist:
		rm -f $(AMSR_PRG).tar.gz ; \
		tar cvf $(AMSR_PRG).tar $(ALLSRCS) *.C Make* \
		gzip $(AMSR_PRG).tar

clean:
		@rm -f $(ALLOBJS) $(ALLDICT)

