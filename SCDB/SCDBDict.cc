//
// File generated by /afs/cern.ch/exp/ams/Offline/root/Linux/527.gcc64/bin/rootcint at Fri Feb 25 00:19:16 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SCDBDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SCDBDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, ::SubType > pairlEintcOSubTypegR;
      #else
      class pairlEintcOSubTypegR  {
         public:
         //friend XX;
         int first; //
         ::SubType second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, ::DataType > pairlEintcODataTypegR;
      #else
      class pairlEintcODataTypegR  {
         public:
         //friend XX;
         int first; //
         ::DataType second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< int, ::SlowControlEl > pairlEintcOSlowControlElgR;
      #else
      class pairlEintcOSlowControlElgR  {
         public:
         //friend XX;
         int first; //
         ::SlowControlEl second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< unsigned int, vector< float, allocator< float >  >  > pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR;
      #else
      class pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR  {
         public:
         //friend XX;
         unsigned int first; //
         vector< float, allocator< float >  > second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void SubType_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SubType(void *p = 0);
   static void *newArray_SubType(Long_t size, void *p);
   static void delete_SubType(void *p);
   static void deleteArray_SubType(void *p);
   static void destruct_SubType(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SubType*)
   {
      ::SubType *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SubType >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SubType", ::SubType::Class_Version(), "./inc/SlowControlDB.h", 9,
                  typeid(::SubType), DefineBehavior(ptr, ptr),
                  &::SubType::Dictionary, isa_proxy, 4,
                  sizeof(::SubType) );
      instance.SetNew(&new_SubType);
      instance.SetNewArray(&newArray_SubType);
      instance.SetDelete(&delete_SubType);
      instance.SetDeleteArray(&deleteArray_SubType);
      instance.SetDestructor(&destruct_SubType);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SubType*)
   {
      return GenerateInitInstanceLocal((::SubType*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SubType*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void DataType_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DataType(void *p = 0);
   static void *newArray_DataType(Long_t size, void *p);
   static void delete_DataType(void *p);
   static void deleteArray_DataType(void *p);
   static void destruct_DataType(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::DataType*)
   {
      ::DataType *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DataType >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DataType", ::DataType::Class_Version(), "./inc/SlowControlDB.h", 40,
                  typeid(::DataType), DefineBehavior(ptr, ptr),
                  &::DataType::Dictionary, isa_proxy, 4,
                  sizeof(::DataType) );
      instance.SetNew(&new_DataType);
      instance.SetNewArray(&newArray_DataType);
      instance.SetDelete(&delete_DataType);
      instance.SetDeleteArray(&deleteArray_DataType);
      instance.SetDestructor(&destruct_DataType);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::DataType*)
   {
      return GenerateInitInstanceLocal((::DataType*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DataType*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEintcOSubTypegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOSubTypegR_Dictionary();
   static void *new_pairlEintcOSubTypegR(void *p = 0);
   static void *newArray_pairlEintcOSubTypegR(Long_t size, void *p);
   static void delete_pairlEintcOSubTypegR(void *p);
   static void deleteArray_pairlEintcOSubTypegR(void *p);
   static void destruct_pairlEintcOSubTypegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,SubType>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,SubType> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,SubType>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,SubType>", "prec_stl/utility", 17,
                  typeid(pair<int,SubType>), DefineBehavior(ptr, ptr),
                  &pairlEintcOSubTypegR_ShowMembers, &pairlEintcOSubTypegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,SubType>) );
      instance.SetNew(&new_pairlEintcOSubTypegR);
      instance.SetNewArray(&newArray_pairlEintcOSubTypegR);
      instance.SetDelete(&delete_pairlEintcOSubTypegR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOSubTypegR);
      instance.SetDestructor(&destruct_pairlEintcOSubTypegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<int,SubType>*)
   {
      return GenerateInitInstanceLocal((pair<int,SubType>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,SubType>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOSubTypegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<int,SubType>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void Node_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Node(void *p = 0);
   static void *newArray_Node(Long_t size, void *p);
   static void delete_Node(void *p);
   static void deleteArray_Node(void *p);
   static void destruct_Node(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Node*)
   {
      ::Node *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Node >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Node", ::Node::Class_Version(), "./inc/SlowControlDB.h", 93,
                  typeid(::Node), DefineBehavior(ptr, ptr),
                  &::Node::Dictionary, isa_proxy, 4,
                  sizeof(::Node) );
      instance.SetNew(&new_Node);
      instance.SetNewArray(&newArray_Node);
      instance.SetDelete(&delete_Node);
      instance.SetDeleteArray(&deleteArray_Node);
      instance.SetDestructor(&destruct_Node);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Node*)
   {
      return GenerateInitInstanceLocal((::Node*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Node*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEintcODataTypegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcODataTypegR_Dictionary();
   static void *new_pairlEintcODataTypegR(void *p = 0);
   static void *newArray_pairlEintcODataTypegR(Long_t size, void *p);
   static void delete_pairlEintcODataTypegR(void *p);
   static void deleteArray_pairlEintcODataTypegR(void *p);
   static void destruct_pairlEintcODataTypegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,DataType>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,DataType> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,DataType>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,DataType>", "prec_stl/utility", 17,
                  typeid(pair<int,DataType>), DefineBehavior(ptr, ptr),
                  &pairlEintcODataTypegR_ShowMembers, &pairlEintcODataTypegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,DataType>) );
      instance.SetNew(&new_pairlEintcODataTypegR);
      instance.SetNewArray(&newArray_pairlEintcODataTypegR);
      instance.SetDelete(&delete_pairlEintcODataTypegR);
      instance.SetDeleteArray(&deleteArray_pairlEintcODataTypegR);
      instance.SetDestructor(&destruct_pairlEintcODataTypegR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<int,DataType>*)
   {
      return GenerateInitInstanceLocal((pair<int,DataType>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,DataType>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcODataTypegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<int,DataType>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void SlowControlEl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SlowControlEl(void *p = 0);
   static void *newArray_SlowControlEl(Long_t size, void *p);
   static void delete_SlowControlEl(void *p);
   static void deleteArray_SlowControlEl(void *p);
   static void destruct_SlowControlEl(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SlowControlEl*)
   {
      ::SlowControlEl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SlowControlEl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SlowControlEl", ::SlowControlEl::Class_Version(), "./inc/SlowControlDB.h", 170,
                  typeid(::SlowControlEl), DefineBehavior(ptr, ptr),
                  &::SlowControlEl::Dictionary, isa_proxy, 4,
                  sizeof(::SlowControlEl) );
      instance.SetNew(&new_SlowControlEl);
      instance.SetNewArray(&newArray_SlowControlEl);
      instance.SetDelete(&delete_SlowControlEl);
      instance.SetDeleteArray(&deleteArray_SlowControlEl);
      instance.SetDestructor(&destruct_SlowControlEl);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SlowControlEl*)
   {
      return GenerateInitInstanceLocal((::SlowControlEl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SlowControlEl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEintcOSlowControlElgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEintcOSlowControlElgR_Dictionary();
   static void *new_pairlEintcOSlowControlElgR(void *p = 0);
   static void *newArray_pairlEintcOSlowControlElgR(Long_t size, void *p);
   static void delete_pairlEintcOSlowControlElgR(void *p);
   static void deleteArray_pairlEintcOSlowControlElgR(void *p);
   static void destruct_pairlEintcOSlowControlElgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,SlowControlEl>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<int,SlowControlEl> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,SlowControlEl>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,SlowControlEl>", "prec_stl/utility", 17,
                  typeid(pair<int,SlowControlEl>), DefineBehavior(ptr, ptr),
                  &pairlEintcOSlowControlElgR_ShowMembers, &pairlEintcOSlowControlElgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,SlowControlEl>) );
      instance.SetNew(&new_pairlEintcOSlowControlElgR);
      instance.SetNewArray(&newArray_pairlEintcOSlowControlElgR);
      instance.SetDelete(&delete_pairlEintcOSlowControlElgR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOSlowControlElgR);
      instance.SetDestructor(&destruct_pairlEintcOSlowControlElgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<int,SlowControlEl>*)
   {
      return GenerateInitInstanceLocal((pair<int,SlowControlEl>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<int,SlowControlEl>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEintcOSlowControlElgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<int,SlowControlEl>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void SlowControlDB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SlowControlDB(void *p = 0);
   static void *newArray_SlowControlDB(Long_t size, void *p);
   static void delete_SlowControlDB(void *p);
   static void deleteArray_SlowControlDB(void *p);
   static void destruct_SlowControlDB(void *p);
   static void directoryAutoAdd_SlowControlDB(void *p, TDirectory *dir);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SlowControlDB*)
   {
      ::SlowControlDB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SlowControlDB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SlowControlDB", ::SlowControlDB::Class_Version(), "./inc/SlowControlDB.h", 271,
                  typeid(::SlowControlDB), DefineBehavior(ptr, ptr),
                  &::SlowControlDB::Dictionary, isa_proxy, 4,
                  sizeof(::SlowControlDB) );
      instance.SetNew(&new_SlowControlDB);
      instance.SetNewArray(&newArray_SlowControlDB);
      instance.SetDelete(&delete_SlowControlDB);
      instance.SetDeleteArray(&deleteArray_SlowControlDB);
      instance.SetDestructor(&destruct_SlowControlDB);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_SlowControlDB);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SlowControlDB*)
   {
      return GenerateInitInstanceLocal((::SlowControlDB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SlowControlDB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR_Dictionary();
   static void *new_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p = 0);
   static void *newArray_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(Long_t size, void *p);
   static void delete_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p);
   static void deleteArray_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p);
   static void destruct_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned int,vector<float,allocator<float> > >*)
   {
      // Make sure the shadow class has the right sizeof
      pair<unsigned int,vector<float,allocator<float> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned int,vector<float,allocator<float> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned int,vector<float,allocator<float> > >", "prec_stl/utility", 17,
                  typeid(pair<unsigned int,vector<float,allocator<float> > >), DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR_ShowMembers, &pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<unsigned int,vector<float,allocator<float> > >) );
      instance.SetNew(&new_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
      instance.SetNewArray(&newArray_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
      instance.SetDelete(&delete_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
      instance.SetDestructor(&destruct_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<unsigned int,vector<float,allocator<float> > >*)
   {
      return GenerateInitInstanceLocal((pair<unsigned int,vector<float,allocator<float> > >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<unsigned int,vector<float,allocator<float> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,vector<float,allocator<float> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *SubType::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SubType::Class_Name()
{
   return "SubType";
}

//______________________________________________________________________________
const char *SubType::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SubType*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SubType::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SubType*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SubType::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SubType*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SubType::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SubType*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *DataType::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *DataType::Class_Name()
{
   return "DataType";
}

//______________________________________________________________________________
const char *DataType::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DataType*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataType::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::DataType*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataType::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DataType*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataType::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::DataType*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Node::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Node::Class_Name()
{
   return "Node";
}

//______________________________________________________________________________
const char *Node::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Node*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Node::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Node*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Node::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Node*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Node::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Node*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *SlowControlEl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SlowControlEl::Class_Name()
{
   return "SlowControlEl";
}

//______________________________________________________________________________
const char *SlowControlEl::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SlowControlEl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SlowControlEl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SlowControlEl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SlowControlEl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SlowControlEl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SlowControlEl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SlowControlEl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *SlowControlDB::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SlowControlDB::Class_Name()
{
   return "SlowControlDB";
}

//______________________________________________________________________________
const char *SlowControlDB::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SlowControlDB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SlowControlDB::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SlowControlDB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SlowControlDB::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SlowControlDB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SlowControlDB::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SlowControlDB*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void SlowControlEl::Streamer(TBuffer &R__b)
{
   // Stream an object of class SlowControlEl.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SlowControlEl::Class(),this);
   } else {
      R__b.WriteClassBuffer(SlowControlEl::Class(),this);
   }
}

//______________________________________________________________________________
void SlowControlEl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SlowControlEl.
      TClass *R__cl = ::SlowControlEl::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_table", (void*)&_table);
      R__insp.InspectMember("map<unsigned int,float>", (void*)&_table, "_table.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SlowControlEl(void *p) {
      return  p ? new(p) ::SlowControlEl : new ::SlowControlEl;
   }
   static void *newArray_SlowControlEl(Long_t nElements, void *p) {
      return p ? new(p) ::SlowControlEl[nElements] : new ::SlowControlEl[nElements];
   }
   // Wrapper around operator delete
   static void delete_SlowControlEl(void *p) {
      delete ((::SlowControlEl*)p);
   }
   static void deleteArray_SlowControlEl(void *p) {
      delete [] ((::SlowControlEl*)p);
   }
   static void destruct_SlowControlEl(void *p) {
      typedef ::SlowControlEl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SlowControlEl

//______________________________________________________________________________
void SlowControlDB::Streamer(TBuffer &R__b)
{
   // Stream an object of class SlowControlDB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SlowControlDB::Class(),this);
   } else {
      R__b.WriteClassBuffer(SlowControlDB::Class(),this);
   }
}

//______________________________________________________________________________
void SlowControlDB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SlowControlDB.
      TClass *R__cl = ::SlowControlDB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "begin", &begin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "end", &end);
      TChain::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SlowControlDB(void *p) {
      return  p ? new(p) ::SlowControlDB : new ::SlowControlDB;
   }
   static void *newArray_SlowControlDB(Long_t nElements, void *p) {
      return p ? new(p) ::SlowControlDB[nElements] : new ::SlowControlDB[nElements];
   }
   // Wrapper around operator delete
   static void delete_SlowControlDB(void *p) {
      delete ((::SlowControlDB*)p);
   }
   static void deleteArray_SlowControlDB(void *p) {
      delete [] ((::SlowControlDB*)p);
   }
   static void destruct_SlowControlDB(void *p) {
      typedef ::SlowControlDB current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_SlowControlDB(void *p, TDirectory *dir) {
      ((::SlowControlDB*)p)->DirectoryAutoAdd(dir);
   }
} // end of namespace ROOT for class ::SlowControlDB

//______________________________________________________________________________
namespace ROOT {
   void pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<unsigned int,vector<float,allocator<float> > >.
      typedef ::ROOT::Shadow::pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,vector<float,allocator<float> > >*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("vector<float,allocator<float> >", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned int,vector<float,allocator<float> > > : new pair<unsigned int,vector<float,allocator<float> > >;
   }
   static void *newArray_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned int,vector<float,allocator<float> > >[nElements] : new pair<unsigned int,vector<float,allocator<float> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p) {
      delete ((pair<unsigned int,vector<float,allocator<float> > >*)p);
   }
   static void deleteArray_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p) {
      delete [] ((pair<unsigned int,vector<float,allocator<float> > >*)p);
   }
   static void destruct_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void *p) {
      typedef pair<unsigned int,vector<float,allocator<float> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned int,vector<float,allocator<float> > >

//______________________________________________________________________________
namespace ROOT {
   void pairlEintcOSlowControlElgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,SlowControlEl>.
      typedef ::ROOT::Shadow::pairlEintcOSlowControlElgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<int,SlowControlEl>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
      R__insp.InspectMember(sobj->second, "second.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEintcOSlowControlElgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,SlowControlEl> : new pair<int,SlowControlEl>;
   }
   static void *newArray_pairlEintcOSlowControlElgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,SlowControlEl>[nElements] : new pair<int,SlowControlEl>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOSlowControlElgR(void *p) {
      delete ((pair<int,SlowControlEl>*)p);
   }
   static void deleteArray_pairlEintcOSlowControlElgR(void *p) {
      delete [] ((pair<int,SlowControlEl>*)p);
   }
   static void destruct_pairlEintcOSlowControlElgR(void *p) {
      typedef pair<int,SlowControlEl> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<int,SlowControlEl>

//______________________________________________________________________________
void SubType::Streamer(TBuffer &R__b)
{
   // Stream an object of class SubType.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SubType::Class(),this);
   } else {
      R__b.WriteClassBuffer(SubType::Class(),this);
   }
}

//______________________________________________________________________________
void SubType::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SubType.
      TClass *R__cl = ::SubType::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_table", (void*)&_table);
      R__insp.InspectMember("map<unsigned int,float>", (void*)&_table, "_table.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tag", (void*)&tag);
      R__insp.InspectMember("string", (void*)&tag, "tag.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SubType(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SubType : new ::SubType;
   }
   static void *newArray_SubType(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SubType[nElements] : new ::SubType[nElements];
   }
   // Wrapper around operator delete
   static void delete_SubType(void *p) {
      delete ((::SubType*)p);
   }
   static void deleteArray_SubType(void *p) {
      delete [] ((::SubType*)p);
   }
   static void destruct_SubType(void *p) {
      typedef ::SubType current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SubType

//______________________________________________________________________________
namespace ROOT {
   void pairlEintcOSubTypegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,SubType>.
      typedef ::ROOT::Shadow::pairlEintcOSubTypegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<int,SubType>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
      R__insp.InspectMember(sobj->second, "second.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEintcOSubTypegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,SubType> : new pair<int,SubType>;
   }
   static void *newArray_pairlEintcOSubTypegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,SubType>[nElements] : new pair<int,SubType>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOSubTypegR(void *p) {
      delete ((pair<int,SubType>*)p);
   }
   static void deleteArray_pairlEintcOSubTypegR(void *p) {
      delete [] ((pair<int,SubType>*)p);
   }
   static void destruct_pairlEintcOSubTypegR(void *p) {
      typedef pair<int,SubType> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<int,SubType>

//______________________________________________________________________________
void DataType::Streamer(TBuffer &R__b)
{
   // Stream an object of class DataType.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DataType::Class(),this);
   } else {
      R__b.WriteClassBuffer(DataType::Class(),this);
   }
}

//______________________________________________________________________________
void DataType::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DataType.
      TClass *R__cl = ::DataType::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subtypes", (void*)&subtypes);
      R__insp.InspectMember("map<int,SubType>", (void*)&subtypes, "subtypes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_DataType(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataType : new ::DataType;
   }
   static void *newArray_DataType(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::DataType[nElements] : new ::DataType[nElements];
   }
   // Wrapper around operator delete
   static void delete_DataType(void *p) {
      delete ((::DataType*)p);
   }
   static void deleteArray_DataType(void *p) {
      delete [] ((::DataType*)p);
   }
   static void destruct_DataType(void *p) {
      typedef ::DataType current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::DataType

//______________________________________________________________________________
namespace ROOT {
   void pairlEintcODataTypegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<int,DataType>.
      typedef ::ROOT::Shadow::pairlEintcODataTypegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<int,DataType>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
      R__insp.InspectMember(sobj->second, "second.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEintcODataTypegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,DataType> : new pair<int,DataType>;
   }
   static void *newArray_pairlEintcODataTypegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<int,DataType>[nElements] : new pair<int,DataType>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcODataTypegR(void *p) {
      delete ((pair<int,DataType>*)p);
   }
   static void deleteArray_pairlEintcODataTypegR(void *p) {
      delete [] ((pair<int,DataType>*)p);
   }
   static void destruct_pairlEintcODataTypegR(void *p) {
      typedef pair<int,DataType> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<int,DataType>

//______________________________________________________________________________
void Node::Streamer(TBuffer &R__b)
{
   // Stream an object of class Node.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Node::Class(),this);
   } else {
      R__b.WriteClassBuffer(Node::Class(),this);
   }
}

//______________________________________________________________________________
void Node::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Node.
      TClass *R__cl = ::Node::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datatypes", (void*)&datatypes);
      R__insp.InspectMember("map<int,DataType>", (void*)&datatypes, "datatypes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Node(void *p) {
      return  p ? new(p) ::Node : new ::Node;
   }
   static void *newArray_Node(Long_t nElements, void *p) {
      return p ? new(p) ::Node[nElements] : new ::Node[nElements];
   }
   // Wrapper around operator delete
   static void delete_Node(void *p) {
      delete ((::Node*)p);
   }
   static void deleteArray_Node(void *p) {
      delete [] ((::Node*)p);
   }
   static void destruct_Node(void *p) {
      typedef ::Node current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Node

namespace ROOT {
   void maplEintcODataTypegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcODataTypegR_Dictionary();
   static void *new_maplEintcODataTypegR(void *p = 0);
   static void *newArray_maplEintcODataTypegR(Long_t size, void *p);
   static void delete_maplEintcODataTypegR(void *p);
   static void deleteArray_maplEintcODataTypegR(void *p);
   static void destruct_maplEintcODataTypegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,DataType>*)
   {
      map<int,DataType> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,DataType>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,DataType>", -2, "prec_stl/map", 63,
                  typeid(map<int,DataType>), DefineBehavior(ptr, ptr),
                  0, &maplEintcODataTypegR_Dictionary, isa_proxy, 4,
                  sizeof(map<int,DataType>) );
      instance.SetNew(&new_maplEintcODataTypegR);
      instance.SetNewArray(&newArray_maplEintcODataTypegR);
      instance.SetDelete(&delete_maplEintcODataTypegR);
      instance.SetDeleteArray(&deleteArray_maplEintcODataTypegR);
      instance.SetDestructor(&destruct_maplEintcODataTypegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,DataType> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,DataType>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcODataTypegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,DataType>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcODataTypegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,DataType> : new map<int,DataType>;
   }
   static void *newArray_maplEintcODataTypegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,DataType>[nElements] : new map<int,DataType>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcODataTypegR(void *p) {
      delete ((map<int,DataType>*)p);
   }
   static void deleteArray_maplEintcODataTypegR(void *p) {
      delete [] ((map<int,DataType>*)p);
   }
   static void destruct_maplEintcODataTypegR(void *p) {
      typedef map<int,DataType> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,DataType>

namespace ROOT {
   void maplEintcOSlowControlElgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOSlowControlElgR_Dictionary();
   static void *new_maplEintcOSlowControlElgR(void *p = 0);
   static void *newArray_maplEintcOSlowControlElgR(Long_t size, void *p);
   static void delete_maplEintcOSlowControlElgR(void *p);
   static void deleteArray_maplEintcOSlowControlElgR(void *p);
   static void destruct_maplEintcOSlowControlElgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,SlowControlEl>*)
   {
      map<int,SlowControlEl> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,SlowControlEl>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,SlowControlEl>", -2, "prec_stl/map", 63,
                  typeid(map<int,SlowControlEl>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOSlowControlElgR_Dictionary, isa_proxy, 4,
                  sizeof(map<int,SlowControlEl>) );
      instance.SetNew(&new_maplEintcOSlowControlElgR);
      instance.SetNewArray(&newArray_maplEintcOSlowControlElgR);
      instance.SetDelete(&delete_maplEintcOSlowControlElgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOSlowControlElgR);
      instance.SetDestructor(&destruct_maplEintcOSlowControlElgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,SlowControlEl> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,SlowControlEl>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOSlowControlElgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,SlowControlEl>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOSlowControlElgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,SlowControlEl> : new map<int,SlowControlEl>;
   }
   static void *newArray_maplEintcOSlowControlElgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,SlowControlEl>[nElements] : new map<int,SlowControlEl>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOSlowControlElgR(void *p) {
      delete ((map<int,SlowControlEl>*)p);
   }
   static void deleteArray_maplEintcOSlowControlElgR(void *p) {
      delete [] ((map<int,SlowControlEl>*)p);
   }
   static void destruct_maplEintcOSlowControlElgR(void *p) {
      typedef map<int,SlowControlEl> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,SlowControlEl>

namespace ROOT {
   void maplEintcOSubTypegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOSubTypegR_Dictionary();
   static void *new_maplEintcOSubTypegR(void *p = 0);
   static void *newArray_maplEintcOSubTypegR(Long_t size, void *p);
   static void delete_maplEintcOSubTypegR(void *p);
   static void deleteArray_maplEintcOSubTypegR(void *p);
   static void destruct_maplEintcOSubTypegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,SubType>*)
   {
      map<int,SubType> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,SubType>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,SubType>", -2, "prec_stl/map", 63,
                  typeid(map<int,SubType>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOSubTypegR_Dictionary, isa_proxy, 4,
                  sizeof(map<int,SubType>) );
      instance.SetNew(&new_maplEintcOSubTypegR);
      instance.SetNewArray(&newArray_maplEintcOSubTypegR);
      instance.SetDelete(&delete_maplEintcOSubTypegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOSubTypegR);
      instance.SetDestructor(&destruct_maplEintcOSubTypegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,SubType> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,SubType>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOSubTypegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,SubType>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOSubTypegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,SubType> : new map<int,SubType>;
   }
   static void *newArray_maplEintcOSubTypegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,SubType>[nElements] : new map<int,SubType>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOSubTypegR(void *p) {
      delete ((map<int,SubType>*)p);
   }
   static void deleteArray_maplEintcOSubTypegR(void *p) {
      delete [] ((map<int,SubType>*)p);
   }
   static void destruct_maplEintcOSubTypegR(void *p) {
      typedef map<int,SubType> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,SubType>

namespace ROOT {
   void maplEunsignedsPintcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOfloatgR_Dictionary();
   static void *new_maplEunsignedsPintcOfloatgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOfloatgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOfloatgR(void *p);
   static void deleteArray_maplEunsignedsPintcOfloatgR(void *p);
   static void destruct_maplEunsignedsPintcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,float>*)
   {
      map<unsigned int,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,float>", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,float>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,float>) );
      instance.SetNew(&new_maplEunsignedsPintcOfloatgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOfloatgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOfloatgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,float> : new map<unsigned int,float>;
   }
   static void *newArray_maplEunsignedsPintcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,float>[nElements] : new map<unsigned int,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOfloatgR(void *p) {
      delete ((map<unsigned int,float>*)p);
   }
   static void deleteArray_maplEunsignedsPintcOfloatgR(void *p) {
      delete [] ((map<unsigned int,float>*)p);
   }
   static void destruct_maplEunsignedsPintcOfloatgR(void *p) {
      typedef map<unsigned int,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,float>

namespace ROOT {
   void maplEunsignedsPintcOvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOvectorlEfloatgRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,vector<float> >*)
   {
      map<unsigned int,vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,vector<float> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,vector<float> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<unsigned int,vector<float> >) );
      instance.SetNew(&new_maplEunsignedsPintcOvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,vector<float> > : new map<unsigned int,vector<float> >;
   }
   static void *newArray_maplEunsignedsPintcOvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,vector<float> >[nElements] : new map<unsigned int,vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p) {
      delete ((map<unsigned int,vector<float> >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p) {
      delete [] ((map<unsigned int,vector<float> >*)p);
   }
   static void destruct_maplEunsignedsPintcOvectorlEfloatgRsPgR(void *p) {
      typedef map<unsigned int,vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,vector<float> >

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

/********************************************************
* SCDBDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSCDBDict();

extern "C" void G__set_cpp_environmentSCDBDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("inc/SlowControlDB.h");
  G__cpp_reset_tagtableSCDBDict();
}
#include <new>
extern "C" int G__cpp_dllrevSCDBDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* SubType */
static int G__SCDBDict_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SubType* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SubType[n];
     } else {
       p = new((void*) gvp) SubType[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SubType;
     } else {
       p = new((void*) gvp) SubType;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SubType));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SubType* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SubType((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SubType((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SubType));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SubType*) G__getstructoffset())->Add((unsigned int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((SubType*) G__getstructoffset())->GetTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((SubType*) G__getstructoffset())->GetValue((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SubType*) G__getstructoffset())->getnelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SubType::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SubType::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SubType::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SubType::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SubType*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SubType*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SubType*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SubType*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SubType::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SubType::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SubType::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_523_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SubType::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_523_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SubType* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SubType(*(SubType*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SubType));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SubType G__TSubType;
static int G__SCDBDict_523_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SubType*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SubType*) (soff+(sizeof(SubType)*i)))->~G__TSubType();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SubType*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SubType*) (soff))->~G__TSubType();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SCDBDict_523_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SubType* dest = (SubType*) G__getstructoffset();
   *dest = *(SubType*) libp->para[0].ref;
   const SubType& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DataType */
static int G__SCDBDict_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataType* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataType[n];
     } else {
       p = new((void*) gvp) DataType[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DataType;
     } else {
       p = new((void*) gvp) DataType;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_DataType));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataType* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DataType((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) DataType((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_DataType));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataType*) G__getstructoffset())->GetSubType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataType*) G__getstructoffset())->GetSubTypeN((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DataType*) G__getstructoffset())->Add((SubType*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((DataType*) G__getstructoffset())->Append((SubType*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((DataType*) G__getstructoffset())->getnelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DataType::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataType::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DataType::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DataType::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DataType*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataType*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataType*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DataType*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataType::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataType::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DataType::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_533_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DataType::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_533_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   DataType* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new DataType(*(DataType*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_DataType));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DataType G__TDataType;
static int G__SCDBDict_533_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DataType*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DataType*) (soff+(sizeof(DataType)*i)))->~G__TDataType();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DataType*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DataType*) (soff))->~G__TDataType();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SCDBDict_533_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DataType* dest = (DataType*) G__getstructoffset();
   *dest = *(DataType*) libp->para[0].ref;
   const DataType& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<int,SubType,less<int>,allocator<pair<const int,SubType> > > */
static int G__SCDBDict_536_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SubType,less<int>,allocator<pair<const int,SubType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >[n];
     } else {
       p = new((void*) gvp) map<int,SubType,less<int>,allocator<pair<const int,SubType> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >;
     } else {
       p = new((void*) gvp) map<int,SubType,less<int>,allocator<pair<const int,SubType> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SubType,less<int>,allocator<pair<const int,SubType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,SubType,less<int>,allocator<pair<const int,SubType> > >(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SubType,less<int>,allocator<pair<const int,SubType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,SubType,less<int>,allocator<pair<const int,SubType> > >(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SubType,less<int>,allocator<pair<const int,SubType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >(*(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<int,SubType,less<int>,allocator<pair<const int,SubType> > >(*(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,SubType,less<int>,allocator<pair<const int,SubType> > >& obj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->operator=(*(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->begin();
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->end();
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->rbegin();
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->rend();
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SubType& obj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->operator[](*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator,bool>* pobj;
         pair<map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator,bool> xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->insert(*(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->insert(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[0])), *(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::value_type*) libp->para[1].ref);
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->insert(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->insert(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->erase(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->erase(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->erase(*((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[0])), *((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->swap(*(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->find(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->count(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->lower_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_536_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator* pobj;
         map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator xobj = ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) G__getstructoffset())->upper_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<int,SubType,less<int>,allocator<pair<const int,SubType> > > G__TmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR;
static int G__SCDBDict_536_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) (soff+(sizeof(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >)*i)))->~G__TmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*) (soff))->~G__TmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,SubType> */
static int G__SCDBDict_537_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,SubType>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,SubType>[n];
     } else {
       p = new((void*) gvp) pair<int,SubType>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,SubType>;
     } else {
       p = new((void*) gvp) pair<int,SubType>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_537_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,SubType>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,SubType>(*(int*) G__Intref(&libp->para[0]), *(SubType*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<int,SubType>(*(int*) G__Intref(&libp->para[0]), *(SubType*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_537_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,SubType>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,SubType>(*(pair<int,SubType>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,SubType> G__TpairlEintcOSubTypegR;
static int G__SCDBDict_537_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,SubType>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,SubType>*) (soff+(sizeof(pair<int,SubType>)*i)))->~G__TpairlEintcOSubTypegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,SubType>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,SubType>*) (soff))->~G__TpairlEintcOSubTypegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Node */
static int G__SCDBDict_541_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Node* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Node[n];
     } else {
       p = new((void*) gvp) Node[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Node;
     } else {
       p = new((void*) gvp) Node;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_Node));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Node* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Node((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Node((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_Node));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Node* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Node((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Node((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_Node));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Node*) G__getstructoffset())->GetDataType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Node*) G__getstructoffset())->GetDataTypeN((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Node*) G__getstructoffset())->Add((DataType*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Node*) G__getstructoffset())->Append((DataType*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Node*) G__getstructoffset())->AddNode((Node*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Node*) G__getstructoffset())->getnelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Node::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Node::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Node::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Node::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Node*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Node::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Node::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Node::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_541_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Node::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_541_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Node* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Node(*(Node*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_Node));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Node G__TNode;
static int G__SCDBDict_541_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Node*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Node*) (soff+(sizeof(Node)*i)))->~G__TNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Node*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Node*) (soff))->~G__TNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SCDBDict_541_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Node* dest = (Node*) G__getstructoffset();
   *dest = *(Node*) libp->para[0].ref;
   const Node& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<int,DataType,less<int>,allocator<pair<const int,DataType> > > */
static int G__SCDBDict_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,DataType,less<int>,allocator<pair<const int,DataType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >[n];
     } else {
       p = new((void*) gvp) map<int,DataType,less<int>,allocator<pair<const int,DataType> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >;
     } else {
       p = new((void*) gvp) map<int,DataType,less<int>,allocator<pair<const int,DataType> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,DataType,less<int>,allocator<pair<const int,DataType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,DataType,less<int>,allocator<pair<const int,DataType> > >(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,DataType,less<int>,allocator<pair<const int,DataType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,DataType,less<int>,allocator<pair<const int,DataType> > >(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,DataType,less<int>,allocator<pair<const int,DataType> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >(*(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<int,DataType,less<int>,allocator<pair<const int,DataType> > >(*(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,DataType,less<int>,allocator<pair<const int,DataType> > >& obj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->operator=(*(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->begin();
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->end();
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->rbegin();
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->rend();
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const DataType& obj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->operator[](*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator,bool>* pobj;
         pair<map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator,bool> xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->insert(*(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->insert(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[0])), *(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::value_type*) libp->para[1].ref);
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->insert(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->insert(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->erase(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->erase(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->erase(*((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[0])), *((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->swap(*(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->find(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->count(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->lower_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_544_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator* pobj;
         map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator xobj = ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) G__getstructoffset())->upper_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<int,DataType,less<int>,allocator<pair<const int,DataType> > > G__TmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR;
static int G__SCDBDict_544_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) (soff+(sizeof(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >)*i)))->~G__TmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*) (soff))->~G__TmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,DataType> */
static int G__SCDBDict_545_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,DataType>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,DataType>[n];
     } else {
       p = new((void*) gvp) pair<int,DataType>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,DataType>;
     } else {
       p = new((void*) gvp) pair<int,DataType>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_545_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,DataType>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,DataType>(*(int*) G__Intref(&libp->para[0]), *(DataType*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<int,DataType>(*(int*) G__Intref(&libp->para[0]), *(DataType*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_545_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,DataType>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,DataType>(*(pair<int,DataType>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,DataType> G__TpairlEintcODataTypegR;
static int G__SCDBDict_545_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,DataType>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,DataType>*) (soff+(sizeof(pair<int,DataType>)*i)))->~G__TpairlEintcODataTypegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,DataType>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,DataType>*) (soff))->~G__TpairlEintcODataTypegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SlowControlEl */
static int G__SCDBDict_549_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SlowControlEl* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SlowControlEl[n];
     } else {
       p = new((void*) gvp) SlowControlEl[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SlowControlEl;
     } else {
       p = new((void*) gvp) SlowControlEl;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SlowControlEl* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SlowControlEl((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SlowControlEl((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((SlowControlEl*) G__getstructoffset())->Find((unsigned int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SlowControlEl*) G__getstructoffset())->Add((unsigned int) G__int(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SlowControlEl*) G__getstructoffset())->getnelem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((SlowControlEl*) G__getstructoffset())->getElem((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((SlowControlEl*) G__getstructoffset())->getElemTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((SlowControlEl*) G__getstructoffset())->GetBeginTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((SlowControlEl*) G__getstructoffset())->GetEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((SlowControlEl*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((SlowControlEl*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SlowControlEl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SlowControlEl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SlowControlEl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SlowControlEl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SlowControlEl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SlowControlEl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SlowControlEl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SlowControlEl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_549_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SlowControlEl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_549_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SlowControlEl* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SlowControlEl(*(SlowControlEl*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SlowControlEl G__TSlowControlEl;
static int G__SCDBDict_549_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SlowControlEl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SlowControlEl*) (soff+(sizeof(SlowControlEl)*i)))->~G__TSlowControlEl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SlowControlEl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SlowControlEl*) (soff))->~G__TSlowControlEl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SCDBDict_549_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SlowControlEl* dest = (SlowControlEl*) G__getstructoffset();
   *dest = *(SlowControlEl*) libp->para[0].ref;
   const SlowControlEl& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > > */
static int G__SCDBDict_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >[n];
     } else {
       p = new((void*) gvp) map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >;
     } else {
       p = new((void*) gvp) map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >(*(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >(*(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >& obj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->operator=(*(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->begin();
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->end();
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->rbegin();
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->rend();
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SlowControlEl& obj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->operator[](*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator,bool>* pobj;
         pair<map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator,bool> xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->insert(*(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->insert(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[0])), *(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::value_type*) libp->para[1].ref);
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->insert(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->insert(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->erase(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->erase(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->erase(*((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[0])), *((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->swap(*(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->find(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->count(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->lower_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_552_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator* pobj;
         map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator xobj = ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) G__getstructoffset())->upper_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > > G__TmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR;
static int G__SCDBDict_552_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) (soff+(sizeof(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >)*i)))->~G__TmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*) (soff))->~G__TmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<int,SlowControlEl> */
static int G__SCDBDict_553_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,SlowControlEl>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,SlowControlEl>[n];
     } else {
       p = new((void*) gvp) pair<int,SlowControlEl>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<int,SlowControlEl>;
     } else {
       p = new((void*) gvp) pair<int,SlowControlEl>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_553_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<int,SlowControlEl>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<int,SlowControlEl>(*(int*) G__Intref(&libp->para[0]), *(SlowControlEl*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<int,SlowControlEl>(*(int*) G__Intref(&libp->para[0]), *(SlowControlEl*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_553_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<int,SlowControlEl>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<int,SlowControlEl>(*(pair<int,SlowControlEl>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<int,SlowControlEl> G__TpairlEintcOSlowControlElgR;
static int G__SCDBDict_553_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<int,SlowControlEl>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<int,SlowControlEl>*) (soff+(sizeof(pair<int,SlowControlEl>)*i)))->~G__TpairlEintcOSlowControlElgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<int,SlowControlEl>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<int,SlowControlEl>*) (soff))->~G__TpairlEintcOSlowControlElgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SlowControlDB */
static int G__SCDBDict_557_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SlowControlDB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SlowControlDB[n];
     } else {
       p = new((void*) gvp) SlowControlDB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SlowControlDB;
     } else {
       p = new((void*) gvp) SlowControlDB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SlowControlDB::GetPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SlowControlDB::KillPointer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((char*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((char*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((char*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((TFile*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((TFile*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((TFile*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((SlowControlDB*) G__getstructoffset())->Load((TFile*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SlowControlDB*) G__getstructoffset())->GetElem((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SlowControlDB*) G__getstructoffset())->GetNode((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((SlowControlDB*) G__getstructoffset())->GetData((char*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((SlowControlDB*) G__getstructoffset())->GetData((char*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), *(float*) G__Floatref(&libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((SlowControlDB*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((SlowControlDB*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SlowControlDB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SlowControlDB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SlowControlDB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SlowControlDB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SlowControlDB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SlowControlDB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SlowControlDB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SlowControlDB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_557_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SlowControlDB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SlowControlDB G__TSlowControlDB;
static int G__SCDBDict_557_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SlowControlDB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SlowControlDB*) (soff+(sizeof(SlowControlDB)*i)))->~G__TSlowControlDB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SlowControlDB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SlowControlDB*) (soff))->~G__TSlowControlDB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<unsigned int,vector<float,allocator<float> > > */
static int G__SCDBDict_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned int,vector<float,allocator<float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned int,vector<float,allocator<float> > >[n];
     } else {
       p = new((void*) gvp) pair<unsigned int,vector<float,allocator<float> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned int,vector<float,allocator<float> > >;
     } else {
       p = new((void*) gvp) pair<unsigned int,vector<float,allocator<float> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned int,vector<float,allocator<float> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<unsigned int,vector<float,allocator<float> > >(*(unsigned int*) G__UIntref(&libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<unsigned int,vector<float,allocator<float> > >(*(unsigned int*) G__UIntref(&libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SCDBDict_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<unsigned int,vector<float,allocator<float> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<unsigned int,vector<float,allocator<float> > >(*(pair<unsigned int,vector<float,allocator<float> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<unsigned int,vector<float,allocator<float> > > G__TpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR;
static int G__SCDBDict_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<unsigned int,vector<float,allocator<float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<unsigned int,vector<float,allocator<float> > >*) (soff+(sizeof(pair<unsigned int,vector<float,allocator<float> > >)*i)))->~G__TpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<unsigned int,vector<float,allocator<float> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<unsigned int,vector<float,allocator<float> > >*) (soff))->~G__TpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > > */
static int G__SCDBDict_561_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >[n];
     } else {
       p = new((void*) gvp) map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >;
     } else {
       p = new((void*) gvp) map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >(*(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >(*(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >& obj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->operator=(*(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->begin();
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->end();
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->rend();
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->operator[](*(unsigned int*) G__UIntref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator,bool>* pobj;
         pair<map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator,bool> xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->swap(*(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->find(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->count(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->lower_bound(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SCDBDict_561_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator xobj = ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) G__getstructoffset())->upper_bound(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > > G__TmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR;
static int G__SCDBDict_561_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) (soff+(sizeof(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >)*i)))->~G__TmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*) (soff))->~G__TmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* SubType */

/* DataType */

/* map<int,SubType,less<int>,allocator<pair<const int,SubType> > > */

/* pair<int,SubType> */

/* Node */

/* map<int,DataType,less<int>,allocator<pair<const int,DataType> > > */

/* pair<int,DataType> */

/* SlowControlEl */

/* map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > > */

/* pair<int,SlowControlEl> */

/* SlowControlDB */

/* pair<unsigned int,vector<float,allocator<float> > > */

/* map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSCDBDict {
 public:
  G__Sizep2memfuncSCDBDict(): p(&G__Sizep2memfuncSCDBDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSCDBDict::*p)();
};

size_t G__get_sizep2memfuncSCDBDict()
{
  G__Sizep2memfuncSCDBDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSCDBDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SCDBDictLN_Node))) {
     Node *G__Lderived;
     G__Lderived=(Node*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_Node),G__get_linked_tagnum(&G__SCDBDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_Node),G__get_linked_tagnum(&G__SCDBDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl))) {
     SlowControlEl *G__Lderived;
     G__Lderived=(SlowControlEl*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl),G__get_linked_tagnum(&G__SCDBDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl),G__get_linked_tagnum(&G__SCDBDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB))) {
     SlowControlDB *G__Lderived;
     G__Lderived=(SlowControlDB*)0x1000;
     {
       TChain *G__Lpbase=(TChain*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TChain),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),G__get_linked_tagnum(&G__SCDBDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSCDBDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SCDBDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SCDBDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SCDBDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SCDBDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SCDBDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SCDBDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SCDBDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,float>",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,float,less<unsigned int> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,SubType>",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",105,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__SCDBDictLN_SubType),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__SCDBDictLN_lesslEintgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__SCDBDictLN_allocatorlEpairlEconstsPintcOSubTypegRsPgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,SubType,less<int> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,DataType>",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",105,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__SCDBDictLN_DataType),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__SCDBDictLN_lesslEintgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__SCDBDictLN_allocatorlEpairlEconstsPintcODataTypegRsPgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,DataType,less<int> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,SlowControlEl>",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",105,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__SCDBDictLN_lesslEintgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__SCDBDictLN_allocatorlEpairlEconstsPintcOSlowControlElgRsPgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,SlowControlEl,less<int> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<unsigned int,std::vector<float> >",117,G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,std::vector<float> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",104,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__SCDBDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__SCDBDictLN_lesslEunsignedsPintgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__SCDBDictLN_allocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,vector<float,allocator<float> >,less<unsigned int> >",117,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* SubType */
static void G__setup_memvarSubType(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_SubType));
   { SubType *p; p=(SubType*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR),G__defined_typename("map<unsigned int,float>"),-1,4,"_table=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_string),-1,-1,1,"tag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SCDBDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DataType */
static void G__setup_memvarDataType(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_DataType));
   { DataType *p; p=(DataType*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR),G__defined_typename("map<int,SubType>"),-1,4,"subtypes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SCDBDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<int,SubType,less<int>,allocator<pair<const int,SubType> > > */
static void G__setup_memvarmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   { map<int,SubType,less<int>,allocator<pair<const int,SubType> > > *p; p=(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<int,SubType> */
static void G__setup_memvarpairlEintcOSubTypegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR));
   { pair<int,SubType> *p; p=(pair<int,SubType>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_SubType),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Node */
static void G__setup_memvarNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_Node));
   { Node *p; p=(Node*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR),G__defined_typename("map<int,DataType>"),-1,4,"datatypes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SCDBDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<int,DataType,less<int>,allocator<pair<const int,DataType> > > */
static void G__setup_memvarmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   { map<int,DataType,less<int>,allocator<pair<const int,DataType> > > *p; p=(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<int,DataType> */
static void G__setup_memvarpairlEintcODataTypegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR));
   { pair<int,DataType> *p; p=(pair<int,DataType>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_DataType),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SlowControlEl */
static void G__setup_memvarSlowControlEl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl));
   { SlowControlEl *p; p=(SlowControlEl*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR),G__defined_typename("map<unsigned int,float>"),-1,4,"_table=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SCDBDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > > */
static void G__setup_memvarmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   { map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > > *p; p=(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<int,SlowControlEl> */
static void G__setup_memvarpairlEintcOSlowControlElgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR));
   { pair<int,SlowControlEl> *p; p=(pair<int,SlowControlEl>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SlowControlDB */
static void G__setup_memvarSlowControlDB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB));
   { SlowControlDB *p; p=(SlowControlDB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB),-1,-2,4,"head=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"begin=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"end=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SCDBDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<unsigned int,vector<float,allocator<float> > > */
static void G__setup_memvarpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR));
   { pair<unsigned int,vector<float,allocator<float> > > *p; p=(pair<unsigned int,vector<float,allocator<float> > >*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),104,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__SCDBDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > > */
static void G__setup_memvarmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   { map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > > *p; p=(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSCDBDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncSubType(void) {
   /* SubType */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_SubType));
   G__memfunc_setup("SubType",716,G__SCDBDict_523_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubType",716,G__SCDBDict_523_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__SCDBDict_523_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - time f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__SCDBDict_523_0_4, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__SCDBDict_523_0_5, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getnelem",849,G__SCDBDict_523_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SCDBDict_523_0_7, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SubType::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SCDBDict_523_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SubType::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SCDBDict_523_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SubType::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SCDBDict_523_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SubType::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__SCDBDict_523_0_11, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__SCDBDict_523_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__SCDBDict_523_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SCDBDict_523_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SCDBDict_523_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SubType::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SCDBDict_523_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SubType::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SCDBDict_523_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SubType::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SCDBDict_523_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SubType::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SubType", 716, G__SCDBDict_523_0_19, (int) ('i'), G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 0, 1, 1, 1, 0, "u 'SubType' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SubType", 842, G__SCDBDict_523_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SCDBDict_523_0_21, (int) ('u'), G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 1, 1, 1, 1, 0, "u 'SubType' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDataType(void) {
   /* DataType */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_DataType));
   G__memfunc_setup("DataType",796,G__SCDBDict_533_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataType",796,G__SCDBDict_533_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubType",1004,G__SCDBDict_533_0_3, 85, G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubTypeN",1082,G__SCDBDict_533_0_4, 85, G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 0, 1, 1, 1, 0, "i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__SCDBDict_533_0_5, 103, -1, -1, 0, 1, 1, 1, 0, "U 'SubType' - 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Append",600,G__SCDBDict_533_0_6, 85, G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 0, 1, 1, 1, 0, "U 'SubType' - 0 - st", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getnelem",849,G__SCDBDict_533_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SCDBDict_533_0_8, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DataType::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SCDBDict_533_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataType::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SCDBDict_533_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DataType::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SCDBDict_533_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DataType::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__SCDBDict_533_0_12, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__SCDBDict_533_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__SCDBDict_533_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SCDBDict_533_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SCDBDict_533_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataType::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SCDBDict_533_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataType::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SCDBDict_533_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DataType::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SCDBDict_533_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DataType::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataType", 796, G__SCDBDict_533_0_20, (int) ('i'), G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 0, 1, 1, 1, 0, "u 'DataType' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataType", 922, G__SCDBDict_533_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SCDBDict_533_0_22, (int) ('u'), G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 1, 1, 1, 1, 0, "u 'DataType' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR(void) {
   /* map<int,SubType,less<int>,allocator<pair<const int,SubType> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR));
   G__memfunc_setup("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >",5882,G__SCDBDict_536_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >",5882,G__SCDBDict_536_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - first u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >",5882,G__SCDBDict_536_0_3, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator' - 0 - first u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >",5882,G__SCDBDict_536_0_4, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SCDBDict_536_0_5, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__SCDBDict_536_0_6, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__SCDBDict_536_0_7, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__SCDBDict_536_0_8, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__SCDBDict_536_0_9, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__SCDBDict_536_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__SCDBDict_536_0_11, 107, -1, G__defined_typename("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__SCDBDict_536_0_12, 107, -1, G__defined_typename("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__SCDBDict_536_0_13, 117, G__get_linked_tagnum(&G__SCDBDictLN_SubType), -1, 1, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_536_0_14, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,SubType>' 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_536_0_15, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - position u 'pair<int,SubType>' 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_536_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - first u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_536_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator' - 0 - first u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_536_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_536_0_19, 107, -1, G__defined_typename("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::size_type"), 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_536_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - first u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__SCDBDict_536_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,SubType,less<int>,allocator<pair<const int,SubType> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__SCDBDict_536_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__SCDBDict_536_0_23, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__SCDBDict_536_0_24, 107, -1, G__defined_typename("map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::size_type"), 0, 1, 1, 1, 8, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__SCDBDict_536_0_25, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__SCDBDict_536_0_26, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<int,SubType,less<int>,allocator<pair<const int,SubType> > >", 6008, G__SCDBDict_536_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOSubTypegR(void) {
   /* pair<int,SubType> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR));
   G__memfunc_setup("pair<int,SubType>",1641,G__SCDBDict_537_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,SubType>",1641,G__SCDBDict_537_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a u 'SubType' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR), -1, 1, 1, 1, 4, 0, "u 'pair<int,SubType>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,SubType>", 1641, G__SCDBDict_537_0_4, (int) ('i'), G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSubTypegR), -1, 0, 1, 1, 1, 0, "u 'pair<int,SubType>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,SubType>", 1767, G__SCDBDict_537_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNode(void) {
   /* Node */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_Node));
   G__memfunc_setup("Node",390,G__SCDBDict_541_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_Node), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Node",390,G__SCDBDict_541_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_Node), -1, 0, 1, 1, 1, 0, "C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Node",390,G__SCDBDict_541_0_3, 105, G__get_linked_tagnum(&G__SCDBDictLN_Node), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name1 C - - 0 - name2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataType",1084,G__SCDBDict_541_0_4, 85, G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataTypeN",1162,G__SCDBDict_541_0_5, 85, G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 0, 1, 1, 1, 0, "i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__SCDBDict_541_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "U 'DataType' - 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Append",600,G__SCDBDict_541_0_7, 85, G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 0, 1, 1, 1, 0, "U 'DataType' - 0 - dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNode",655,G__SCDBDict_541_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Node' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getnelem",849,G__SCDBDict_541_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SCDBDict_541_0_10, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Node::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SCDBDict_541_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Node::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SCDBDict_541_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Node::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SCDBDict_541_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Node::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SCDBDict_541_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SCDBDict_541_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Node::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SCDBDict_541_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Node::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SCDBDict_541_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Node::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SCDBDict_541_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Node::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Node", 390, G__SCDBDict_541_0_22, (int) ('i'), G__get_linked_tagnum(&G__SCDBDictLN_Node), -1, 0, 1, 1, 1, 0, "u 'Node' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Node", 516, G__SCDBDict_541_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SCDBDict_541_0_24, (int) ('u'), G__get_linked_tagnum(&G__SCDBDictLN_Node), -1, 1, 1, 1, 1, 0, "u 'Node' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR(void) {
   /* map<int,DataType,less<int>,allocator<pair<const int,DataType> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR));
   G__memfunc_setup("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >",6042,G__SCDBDict_544_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >",6042,G__SCDBDict_544_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - first u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >",6042,G__SCDBDict_544_0_3, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator' - 0 - first u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >",6042,G__SCDBDict_544_0_4, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SCDBDict_544_0_5, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__SCDBDict_544_0_6, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__SCDBDict_544_0_7, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__SCDBDict_544_0_8, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__SCDBDict_544_0_9, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__SCDBDict_544_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__SCDBDict_544_0_11, 107, -1, G__defined_typename("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__SCDBDict_544_0_12, 107, -1, G__defined_typename("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__SCDBDict_544_0_13, 117, G__get_linked_tagnum(&G__SCDBDictLN_DataType), -1, 1, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_544_0_14, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,DataType>' 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_544_0_15, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - position u 'pair<int,DataType>' 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_544_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - first u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_544_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator' - 0 - first u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_544_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_544_0_19, 107, -1, G__defined_typename("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::size_type"), 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_544_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - first u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__SCDBDict_544_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,DataType,less<int>,allocator<pair<const int,DataType> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__SCDBDict_544_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__SCDBDict_544_0_23, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__SCDBDict_544_0_24, 107, -1, G__defined_typename("map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::size_type"), 0, 1, 1, 1, 8, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__SCDBDict_544_0_25, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__SCDBDict_544_0_26, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<int,DataType,less<int>,allocator<pair<const int,DataType> > >", 6168, G__SCDBDict_544_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcODataTypegR(void) {
   /* pair<int,DataType> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR));
   G__memfunc_setup("pair<int,DataType>",1721,G__SCDBDict_545_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,DataType>",1721,G__SCDBDict_545_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a u 'DataType' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR), -1, 1, 1, 1, 4, 0, "u 'pair<int,DataType>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,DataType>", 1721, G__SCDBDict_545_0_4, (int) ('i'), G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcODataTypegR), -1, 0, 1, 1, 1, 0, "u 'pair<int,DataType>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,DataType>", 1847, G__SCDBDict_545_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSlowControlEl(void) {
   /* SlowControlEl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl));
   G__memfunc_setup("SlowControlEl",1335,G__SCDBDict_549_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlowControlEl",1335,G__SCDBDict_549_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl), -1, 0, 1, 1, 1, 0, "C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' aa", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Find",385,G__SCDBDict_549_0_4, 102, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - timestamp f - - 0 - frac "
"i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__SCDBDict_549_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - timestamp f - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getnelem",849,G__SCDBDict_549_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElem",707,G__SCDBDict_549_0_7, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElemTime",1106,G__SCDBDict_549_0_8, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeginTime",1172,G__SCDBDict_549_0_9, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEndTime",966,G__SCDBDict_549_0_10, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__SCDBDict_549_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SCDBDict_549_0_12, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SlowControlEl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SCDBDict_549_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SlowControlEl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SCDBDict_549_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SlowControlEl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SCDBDict_549_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SlowControlEl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SCDBDict_549_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SCDBDict_549_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SlowControlEl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SCDBDict_549_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SlowControlEl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SCDBDict_549_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SlowControlEl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SCDBDict_549_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SlowControlEl::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SlowControlEl", 1335, G__SCDBDict_549_0_24, (int) ('i'), G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl), -1, 0, 1, 1, 1, 0, "u 'SlowControlEl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SlowControlEl", 1461, G__SCDBDict_549_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SCDBDict_549_0_26, (int) ('u'), G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl), -1, 1, 1, 1, 1, 0, "u 'SlowControlEl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR(void) {
   /* map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR));
   G__memfunc_setup("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >",7120,G__SCDBDict_552_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >",7120,G__SCDBDict_552_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - first u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >",7120,G__SCDBDict_552_0_3, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator' - 0 - first u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >",7120,G__SCDBDict_552_0_4, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SCDBDict_552_0_5, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__SCDBDict_552_0_6, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__SCDBDict_552_0_7, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__SCDBDict_552_0_8, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__SCDBDict_552_0_9, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__SCDBDict_552_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__SCDBDict_552_0_11, 107, -1, G__defined_typename("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__SCDBDict_552_0_12, 107, -1, G__defined_typename("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__SCDBDict_552_0_13, 117, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl), -1, 1, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_552_0_14, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,SlowControlEl>' 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_552_0_15, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - position u 'pair<int,SlowControlEl>' 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_552_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - first u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_552_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator' - 0 - first u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_552_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_552_0_19, 107, -1, G__defined_typename("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::size_type"), 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_552_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - first u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__SCDBDict_552_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__SCDBDict_552_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__SCDBDict_552_0_23, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__SCDBDict_552_0_24, 107, -1, G__defined_typename("map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::size_type"), 0, 1, 1, 1, 8, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__SCDBDict_552_0_25, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__SCDBDict_552_0_26, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >", 7246, G__SCDBDict_552_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEintcOSlowControlElgR(void) {
   /* pair<int,SlowControlEl> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR));
   G__memfunc_setup("pair<int,SlowControlEl>",2260,G__SCDBDict_553_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<int,SlowControlEl>",2260,G__SCDBDict_553_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR), -1, 0, 2, 1, 1, 0, 
"i - - 11 - a u 'SlowControlEl' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR), -1, 1, 1, 1, 4, 0, "u 'pair<int,SlowControlEl>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<int,SlowControlEl>", 2260, G__SCDBDict_553_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__SCDBDictLN_pairlEintcOSlowControlElgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,SlowControlEl>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<int,SlowControlEl>", 2386, G__SCDBDict_553_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSlowControlDB(void) {
   /* SlowControlDB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB));
   G__memfunc_setup("SlowControlDB",1292,G__SCDBDict_557_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPointer",1025,G__SCDBDict_557_0_2, 85, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (SlowControlDB* (*)())(&SlowControlDB::GetPointer) ), 0);
   G__memfunc_setup("KillPointer",1133,G__SCDBDict_557_0_3, 85, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlDB), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (SlowControlDB* (*)())(&SlowControlDB::KillPointer) ), 0);
   G__memfunc_setup("Load",384,G__SCDBDict_557_0_4, 103, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - fname h - - 0 '0' minT "
"h - - 0 'UINT_MAX' maxT i - - 0 '0' debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__SCDBDict_557_0_5, 103, -1, -1, 0, 4, 1, 1, 0, 
"U 'TFile' - 0 - f h - - 0 '0' minT "
"h - - 0 'UINT_MAX' maxT i - - 0 '0' debug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElem",675,G__SCDBDict_557_0_6, 85, G__get_linked_tagnum(&G__SCDBDictLN_SlowControlEl), -1, 0, 1, 1, 1, 0, "C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNode",678,G__SCDBDict_557_0_7, 85, G__get_linked_tagnum(&G__SCDBDictLN_Node), -1, 0, 1, 1, 1, 0, "C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__SCDBDict_557_0_8, 105, -1, -1, 0, 5, 1, 1, 0, 
"C - - 0 - name h - - 0 - timestamp "
"f - - 0 - frac f - - 1 - val "
"i - - 0 '1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__SCDBDict_557_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '0' aa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SCDBDict_557_0_10, 85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SlowControlDB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SCDBDict_557_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SlowControlDB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SCDBDict_557_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SlowControlDB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SCDBDict_557_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SlowControlDB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SCDBDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SCDBDict_557_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SCDBDict_557_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SlowControlDB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SCDBDict_557_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SlowControlDB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SCDBDict_557_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SlowControlDB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SCDBDict_557_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SlowControlDB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SlowControlDB", 1418, G__SCDBDict_557_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR(void) {
   /* pair<unsigned int,vector<float,allocator<float> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR));
   G__memfunc_setup("pair<unsigned int,vector<float,allocator<float> > >",4858,G__SCDBDict_558_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<unsigned int,vector<float,allocator<float> > >",4858,G__SCDBDict_558_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"h - - 11 - a u 'vector<float,allocator<float> >' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR), -1, 1, 1, 1, 4, 0, "u 'pair<unsigned int,vector<float,allocator<float> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<unsigned int,vector<float,allocator<float> > >", 4858, G__SCDBDict_558_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,vector<float,allocator<float> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<unsigned int,vector<float,allocator<float> > >", 4984, G__SCDBDict_558_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR(void) {
   /* map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >",13177,G__SCDBDict_561_0_1, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >",13177,G__SCDBDict_561_0_2, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >",13177,G__SCDBDict_561_0_3, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - first u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >",13177,G__SCDBDict_561_0_4, 105, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__SCDBDict_561_0_5, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__SCDBDict_561_0_6, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__SCDBDict_561_0_7, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__SCDBDict_561_0_8, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__SCDBDict_561_0_9, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__SCDBDict_561_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__SCDBDict_561_0_11, 107, -1, G__defined_typename("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__SCDBDict_561_0_12, 107, -1, G__defined_typename("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__SCDBDict_561_0_13, 117, G__get_linked_tagnum(&G__SCDBDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_561_0_14, 117, G__get_linked_tagnum(&G__SCDBDictLN_pairlEmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,vector<float,allocator<float> > >' 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_561_0_15, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - position u 'pair<unsigned int,vector<float,allocator<float> > >' 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_561_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__SCDBDict_561_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - first u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_561_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_561_0_19, 107, -1, G__defined_typename("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::size_type"), 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__SCDBDict_561_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__SCDBDict_561_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__SCDBDict_561_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__SCDBDict_561_0_23, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__SCDBDict_561_0_24, 107, -1, G__defined_typename("map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::size_type"), 0, 1, 1, 1, 8, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__SCDBDict_561_0_25, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__SCDBDict_561_0_26, 117, G__get_linked_tagnum(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >", 13303, G__SCDBDict_561_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSCDBDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSCDBDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSCDBDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SCDBDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_lesslEintgR = { "less<int>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_SubType = { "SubType" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_lesslEunsignedsPintgR = { "less<unsigned int>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR = { "map<unsigned int,float,less<unsigned int>,allocator<pair<const unsigned int,float> > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_DataType = { "DataType" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_allocatorlEpairlEconstsPintcOSubTypegRsPgR = { "allocator<pair<const int,SubType> >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR = { "map<int,SubType,less<int>,allocator<pair<const int,SubType> > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEintcOSubTypegR = { "pair<int,SubType>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator = { "map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLreverse_iterator = { "map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<int,SubType,less<int>,allocator<pair<const int,SubType> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_Node = { "Node" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_allocatorlEpairlEconstsPintcODataTypegRsPgR = { "allocator<pair<const int,DataType> >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR = { "map<int,DataType,less<int>,allocator<pair<const int,DataType> > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEintcODataTypegR = { "pair<int,DataType>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator = { "map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLreverse_iterator = { "map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<int,DataType,less<int>,allocator<pair<const int,DataType> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_SlowControlEl = { "SlowControlEl" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_allocatorlEpairlEconstsPintcOSlowControlElgRsPgR = { "allocator<pair<const int,SlowControlEl> >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR = { "map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEintcOSlowControlElgR = { "pair<int,SlowControlEl>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator = { "map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLreverse_iterator = { "map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_SlowControlDB = { "SlowControlDB" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR = { "pair<unsigned int,vector<float,allocator<float> > >" , 115 , -1 };
G__linked_taginfo G__SCDBDictLN_allocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "allocator<pair<const unsigned int,vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR = { "map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__SCDBDictLN_pairlEmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >::iterator,bool>" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSCDBDict() {
  G__SCDBDictLN_TClass.tagnum = -1 ;
  G__SCDBDictLN_TBuffer.tagnum = -1 ;
  G__SCDBDictLN_TMemberInspector.tagnum = -1 ;
  G__SCDBDictLN_TObject.tagnum = -1 ;
  G__SCDBDictLN_TNamed.tagnum = -1 ;
  G__SCDBDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_string.tagnum = -1 ;
  G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SCDBDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SCDBDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SCDBDictLN_lesslEintgR.tagnum = -1 ;
  G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SCDBDictLN_TFile.tagnum = -1 ;
  G__SCDBDictLN_TAttFill.tagnum = -1 ;
  G__SCDBDictLN_TTree.tagnum = -1 ;
  G__SCDBDictLN_TAttLine.tagnum = -1 ;
  G__SCDBDictLN_TAttMarker.tagnum = -1 ;
  G__SCDBDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_TChain.tagnum = -1 ;
  G__SCDBDictLN_SubType.tagnum = -1 ;
  G__SCDBDictLN_lesslEunsignedsPintgR.tagnum = -1 ;
  G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_DataType.tagnum = -1 ;
  G__SCDBDictLN_allocatorlEpairlEconstsPintcOSubTypegRsPgR.tagnum = -1 ;
  G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_pairlEintcOSubTypegR.tagnum = -1 ;
  G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__SCDBDictLN_pairlEmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__SCDBDictLN_Node.tagnum = -1 ;
  G__SCDBDictLN_allocatorlEpairlEconstsPintcODataTypegRsPgR.tagnum = -1 ;
  G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_pairlEintcODataTypegR.tagnum = -1 ;
  G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__SCDBDictLN_pairlEmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__SCDBDictLN_SlowControlEl.tagnum = -1 ;
  G__SCDBDictLN_allocatorlEpairlEconstsPintcOSlowControlElgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_pairlEintcOSlowControlElgR.tagnum = -1 ;
  G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__SCDBDictLN_pairlEmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__SCDBDictLN_SlowControlDB.tagnum = -1 ;
  G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_allocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__SCDBDictLN_pairlEmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSCDBDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_string);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_lesslEintgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_SubType),sizeof(SubType),-1,295168,(char*)NULL,G__setup_memvarSubType,G__setup_memfuncSubType);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_lesslEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEunsignedsPintcOfloatcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOfloatgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_DataType),sizeof(DataType),-1,295168,(char*)NULL,G__setup_memvarDataType,G__setup_memfuncDataType);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_allocatorlEpairlEconstsPintcOSubTypegRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR),sizeof(map<int,SubType,less<int>,allocator<pair<const int,SubType> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR,G__setup_memfuncmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEintcOSubTypegR),sizeof(pair<int,SubType>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOSubTypegR,G__setup_memfuncpairlEintcOSubTypegR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEmaplEintcOSubTypecOlesslEintgRcOallocatorlEpairlEconstsPintcOSubTypegRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_Node),sizeof(Node),-1,323840,(char*)NULL,G__setup_memvarNode,G__setup_memfuncNode);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_allocatorlEpairlEconstsPintcODataTypegRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR),sizeof(map<int,DataType,less<int>,allocator<pair<const int,DataType> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR,G__setup_memfuncmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEintcODataTypegR),sizeof(pair<int,DataType>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcODataTypegR,G__setup_memfuncpairlEintcODataTypegR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEmaplEintcODataTypecOlesslEintgRcOallocatorlEpairlEconstsPintcODataTypegRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_SlowControlEl),sizeof(SlowControlEl),-1,324864,(char*)NULL,G__setup_memvarSlowControlEl,G__setup_memfuncSlowControlEl);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_allocatorlEpairlEconstsPintcOSlowControlElgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR),sizeof(map<int,SlowControlEl,less<int>,allocator<pair<const int,SlowControlEl> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR,G__setup_memfuncmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEintcOSlowControlElgR),sizeof(pair<int,SlowControlEl>),-1,297216,(char*)NULL,G__setup_memvarpairlEintcOSlowControlElgR,G__setup_memfuncpairlEintcOSlowControlElgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEmaplEintcOSlowControlElcOlesslEintgRcOallocatorlEpairlEconstsPintcOSlowControlElgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_SlowControlDB),sizeof(SlowControlDB),-1,324864,(char*)NULL,G__setup_memvarSlowControlDB,G__setup_memfuncSlowControlDB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR),sizeof(pair<unsigned int,vector<float,allocator<float> > >),-1,297216,(char*)NULL,G__setup_memvarpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR,G__setup_memfuncpairlEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_allocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),sizeof(map<unsigned int,vector<float,allocator<float> >,less<unsigned int>,allocator<pair<const unsigned int,vector<float,allocator<float> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_maplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__SCDBDictLN_pairlEmaplEunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
}
extern "C" void G__cpp_setupSCDBDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSCDBDict()");
  G__set_cpp_environmentSCDBDict();
  G__cpp_setup_tagtableSCDBDict();

  G__cpp_setup_inheritanceSCDBDict();

  G__cpp_setup_typetableSCDBDict();

  G__cpp_setup_memvarSCDBDict();

  G__cpp_setup_memfuncSCDBDict();
  G__cpp_setup_globalSCDBDict();
  G__cpp_setup_funcSCDBDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSCDBDict();
  return;
}
class G__cpp_setup_initSCDBDict {
  public:
    G__cpp_setup_initSCDBDict() { G__add_setup_func("SCDBDict",(G__incsetup)(&G__cpp_setupSCDBDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSCDBDict() { G__remove_setup_func("SCDBDict"); }
};
G__cpp_setup_initSCDBDict G__cpp_setup_initializerSCDBDict;

