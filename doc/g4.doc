#  $Id: g4.doc,v 1.20 2001/01/22 17:00:56 vitali Exp $
-------
Platform:
linux-g++ and dec-cxx >= v6.2

-------
Installer:


source AMS/install/g4i

see $G4INSTALL/ReleaseNotes.VC for ams specifics


<recommended>
setenv AMSWD smth
mkdir $AMSWD/bin
mkdir $AMSWD/exe

gmake -if install/Moptg4   (batch)
gmake -if install/Moptg4i  (interactive{ batch first})

n.b
setenv AMSDEBUG 1 switch on debug mode (compiler's one)
unsetenv AMSDEBUG switch it off

--------
Datacards Switch:

MISCFFKEY.G4On=1



--------
Running conditions:

need to set
limit data 700000
for dec-cxx
limit data 512000
for linux-g++

---------
Example

AMS/datacards/g4.test.job

---------
New Files:


CC/geant4.C                           <<  wrappers, analogs of 
include/geant4.h,geantnamespace.h     <<  gukine,guout,gustep etc
                                      << detector initalizator

CC/g4physics.C   <<- physics

include,CC/g4util.h,C << utilities (rndm etc)  
include,CC/g4xray.h,C << transition radiaton (g3 based)
-----------
Modified files

CC/gbatch.C  << Main program <-- choose geant3/geant4 chain  
                                 
CC/geant.C   << geant(3,4) initialization in uginit/uglast   

CC/gvolume.C << Constructor modified
            

CC/gmat.C    << new geant4  constructors













Status (geant4.3.0):


Tracking is ok for dec/cxx, ok  for linux/gcc2.95.2,
                            ok for          linux/egcs.1.1.2

interactive version ok

geometry tested: tof,tracker,trd,srd,magnet,ecal,anti,rich





<User cuts a-la geant3>

Geant4 has no default tracking cuts and 
also production cuts (in range) belong to particle,
not tracking media.  
Default production cut for all particles except e+- is 1mm,
for e+- is 100 mkm (to properly handle  tracker)

The default energy cuts are now set up automatically according
to CUTS datacards values.

It is also possible to set up the cuts  manually (a-la g3 GSTPAR)
via (gmat.h,gmat.C) CUTGAM CUTELE CUTNEU CUTMUO CUTHAD TOFMAX routines.

Example:
AMSgtmed ptmed= (AMSgtmed*)tmed.add (new AMSgtmed("EC_RADIATOR","LEAD",0,'N',birks,2,20.,10.,1000.,
-1.,0.001,-1.)); // simplif.tracking in magn.f
//GSTPAR(GetLastMedNo(),"CUTGAM",ECMCFFKEY.cutge);// special cuts for EC_RADIATOR
//GSTPAR(GetLastMedNo(),"CUTELE",ECMCFFKEY.cutge);

// geant4 + geant3 (i.e. also calls GSTPAR)

ptmed->CUTGAM(ECMCFFKEY.cutge);
ptmed->CUTELE(ECMCFFKEY.cutge);

in addition one can also set the range cut (in cm)

via 
ptmed.CUTRANGE()=range;

For debug purposes all geant3-like cuts may be switch on/off via 
G4FF 4=1/0   datacard


Random Numbers:

seeds thru same RNDM card as for geant3 (ranecu engine);  
hrndm1 like one must be redone
via <g4util> ::book & ::hrndm1  ones

random sequence doesn' work yet on geant4 (geant4 fault)

Transition Radiation
----------------------

Based on geant3 transition radiation generator + geant4 low energy
photon propagation & absorbtion. Need to be tested


Cerenkov Photons
---------------------

AMSgtmed::AGSCKOV routine handles cerenkov media parameters,
last one is rayleigh "opacity", others as in g3 GSCKOV routine

NB: g4 optical processes were modified, standard ones will not work.   


---------------------




