//==============================
//  TRACKER SIMULATION 
//==============================


TKGEOM
I 1  ReadGeomFromFile =*00 init with default value, alignment filled by TimeID 
             (def 0)  =*01 read from file (fname),  alignment filled by TimeID 
                      =*10 init with default value, alignment NOT filled
                      =*11 read from file (fname),  alignment NOT filled
                      =1** read Disalignment data ([406]disfname)
I 2  WriteGeomToFile  (def 0);
I 3  UpdateGeomFile   (def 0);
I 4  Cabling version =1 Pre-Integration 
		     =2 Flight (default);
I 5  Calib FormatVer =1 Pre-Integration 
		     =2 Flight (default);
I 6   fname   (400*'') file name for dbase from file
I 406 disfname(400*'') Disalignment file name
I 806 alignver(def 2)  Alignment version; 1 :preflight, >1 flight


TRMC
I 564        SimulationType            0 GBATCH: old algorythm
             (def=2)                   1 SkipRawSim: no TrRawClusters, very fast 
                                       2 TrSim2010: a detailed simulation
I 565        MinMCClusters             Minimum number of MC Clusters needed  
             (def=0)                   to trigger digitization (=0, all events)       
I 566        NoiseType                 0 No noise
             (def=3)                   1 Gaussian noise generation for every channel: full simulation, very slow 
                                       2 Gaussian noise generation only on ladders with signal + fake clusters (th)
                                       3 Gaussian noise generation only on ladders with signal + fake clusters (tuned)
R [567,584]  DSPSeedThr[2][9]          DSP Seed Threshold for x and y sides per layer  
             def(all=3.500)
R [585,586]  DSPNeigThr[2]             DSP Neig Threshold for x and y sides 
             (def=1.,1.)
I [587,588]  TrSim2010_ADCMipValue[2]  ADC Mip value 
             (def=34.5,32.)
R [589,590]  TrSim2010_ADCSat[2]       ADC Saturation Limit (for each strip)
             (def=3500.,3500.) 
I [591]      PStripCorr                0 inactivate p-strip non-linearity
             (def=0)                   1 activate p-strip non-linearity (to be checked with real data!)
R [592,593]  TrSim2010_Cint            Interstrip Capacitance (n/p sides)
             (def=80.,50.)
R [594,595]  TrSim2010_Cbk             Backplane + Guard-ring capacitance (n/p sides)
             (def=50.,5.)
R [596,597]  TrSim2010_Cdec            Decoupling Capacitance (n/p sides)
             (def=800.,800.)  
I [598,599]  TrSim2010_DiffType        0 Box
             (def=2,2)                 1 Gaussian
                                       2 Gaussian Convoluted with Box
                                       3 Triangular
                                       4 Sum of Gauss distributions
R [600,601]  TrSim2010_DiffRadius[2]   Parameters for the selected diffusion type
             (def=8.,8.)
R [602,603]  TrSim2010_FracNoise[2]    Percentage of intrisic noise
             (def=0.1,0.1)  
R [604,605]  TrSim2010_AddNoise[2]     Additional noise (ADC counts)
             (def=2.5,2.5)


//==============================
//  TRACKER RECONSTRUCTION
//==============================
TRCL
I 1 Drive the tracker Recon =0 No recon; =1 Cluster; =11 Cluster and hits; =111 Cluster, Hits and Tracks; =1111 with BuildTrTracksSimple
R [2,19] Seed S/N Threshold per layer (1-9)  for 2-10:n(X) 11-19:p(Y) side
R [20,21] expansion S/N Threshold for 4:n(X) 5:p(Y) side
I [22,23] Min Distance between seeds for 6:n(X) 7:p(Y) side
R [24 - 29] hit signal correlation (only muons/protons)
R 30 Threshold on the S/K Correlation probability
R 31 Threshold on the S/K Correlation probability
I 32 Signal correction option (TrClusterR::DefaultCorrOpt)
I 33 Default number of strips for CofG (TrClusterR::DefaultUsedStrips)
R 44 _dxdz threshold for 2/3-strip CofG (TrClusterR::TwoStripThresholdX)
R 35 _dydz threshold for 2/3-strip CofG (TrClusterR::TwoStripThresholdY)
I 36 MaxNrawCls       (Default: 2000) MaxNumber of Raw Cluster allowed to proceed with the reconstruction
I 37 lowdt            (Default:  200) Threeshold used to define a small dt event
I 38 MaxNtrCls        (Default: 1000) MaxNumber of Cluster allowed to proceed with the reconstruction
I 39 MaxNtrCls_ldt    (Default: 150) MaxNumber of Cluster allowed to proceed with the reconstruction
I 40 MaxNtrHit        (Default: 1000) MaxNumber of RecHit allowed to proceed with the reconstruction
F 41 TrTimeLim        (Default: 1000) Tracking Cpu time limit in sec
I 42 MaxNtrack        (Default: 2)
I 43 MinNhitX         (Default: 4)
I 44 MinNhitY         (Default: 5)
I 45 MinNhitXY        (Default: 4)
I 46 PatAllowOption   (NO_EXTP = 1, NO_INTP = 2, ALL_5L = 4, Default=0)
R 47 MaxChisqAllowed  (Default: 300)
R 48 LadderScanRange  (Default: 7.3)
R 49 ClusterScanRange (Default: 0.5)
R 50 MaxChisqForLScan (Default: 2.2)
R 51 ErrXForScan      (Default: 300e-4)
R 52 ErrYForScan      (Default: 300e-4)
R 53,54 TrackThrSeed  (Default: 4.0) Seed S/N Threshold for 37:n(X) 38:p(Y) side
I 55 AdvancedFitFlag  (Default: 0x0f) TrTrackR::AdvancedFitFlags[i] is activated when (AdvancedFitFlag & (1<<i))!=0.
I 56 TrDEBUG
I 57 PZDEBUG

I 58 TAS reconstruction (1:ON 0:OFF, Default:0)
I 59 TAS laser current intensity
I 60 TAS LDDR mode; put dec number as if hex (e.g. 0100 for 0x0100)
I 61 TRD TOF Matching  mn;  m=1 TOF_match ON; n=1 Trd mathcing On; 
I 62 Use Sensor Alignement 1=yes 0=no; must be 0 for MC

//==============================

//=============================
void TRFITFFKEY_DEF::init(){
F  1 	ErrX 		fit point error 
F  2 	ErrY 		fit point error 
F  3 	ErrZ 		fit point error 
F  4-12 FitwMsc[9];	Error term for Multiple scattering per layer (1-9)
F  13  	MergeExtLimX;	max dist to add external planes hits X
F  14  	MergeExtLimY;	max dist to add external planes hits Y



void TRMCFFKEY_DEF::init(){
  //used
  alpha=250;
  beta=0.46;
  gamma=0.25;
  fastswitch=5.e-5;  // inverse linear density of primary electrons
  dedx2nprel=0.33e6;
  delta[0]=0.9; //-0.67;
  delta[1]=1.0;
  gammaA[0]=0.2;  //-0.3;
  gammaA[1]=0.1;
  /// Give the conversion ADC count keV



  //! Seed Threshold (0=S 1=K) for the MC DSP like clusterization
  th1sim[0]=4.0;
  th1sim[1]=4.0;
  //! Enlargement Threshold (0=S 1=K) for the MC DSP like clusterization
  th2sim[0]=1.0;
  th2sim[1]=1.0;
  
  
  //unknown
  ped[0]=500;
  ped[1]=500;
  gain[0]=8;
  gain[1]=8;
  sigma[1]=55./14./sqrt(3.); // sig/noise ratio is about 14 for y
  sigma[0]=sigma[1]*1.41;   // x strip two times larger y
  NonGaussianPart[0]=0;
  NonGaussianPart[1]=0.1;
  BadCh[0]=0.01;
  BadCh[1]=0.01;

  cmn[0]=10;
  cmn[1]= 6;
  adcoverflow=32700;
  NoiseOn=1;
  sec[0]=0;
  sec[1]=0;
  min[0]=0;
  min[1]=0;
  hour[0]=0;
  hour[1]=0;
  day[0]=1;
  day[1]=1;
  mon[0]=0;
  mon[1]=0;
  year[0]=101;
  year[1]=110;
  GenerateConst=0;
  WriteHK=0;
  thr1R[0]=-2.75;
  thr1R[1]=3.5;
  thr2R[0]=1;
  thr2R[1]=1;
  neib[0]=0;
  neib[1]=1;
  CalcCmnNoise[0]=1;
  CalcCmnNoise[1]=0;
  {
    int i,j,k;
    for(i=0;i<8;i++){
      for(j=0;j<2;j++){
	for(k=0;k<32;k++)RawModeOn[i][j][k]=0;
      }
    }
  }
}

TRMCFFKEY_DEF TRMCFFKEY;
//=============================
void TRCALIB_DEF::init(){
  CalibProcedureNo=0;
  EventsPerCheck=100;
  PedAccRequired[0]=0.12;
  PedAccRequired[1]=0.09;
  Validity[0]=0;
  Validity[1]=36000;
  RhoThrA=0.7;
  RhoThrV=0.8;
  BadChanThr[0]=3.3;
  BadChanThr[1]=0.002;
  Method=2;
  Pass=1;
  DPS=1;
  UPDF=4;
  PrintBadChList=0;
  EventsPerIteration[0]=100;
  EventsPerIteration[1]=100;
  EventsPerIteration[2]=100;
  EventsPerIteration[3]=100;
  NumberOfIterations[0]=100;
  NumberOfIterations[1]=100;
  NumberOfIterations[2]=100;
  NumberOfIterations[3]=100;
  BetaCut[0][0]=0.7;
  BetaCut[0][1]=10.;
  BetaCut[1][0]=1;
  BetaCut[1][1]=10;
  BetaCut[2][0]=0.7;
  BetaCut[2][1]=1.4;
  BetaCut[3][0]=0.7;
  BetaCut[3][1]=1.4;
  HitsRatioCut[0]=2.2;
  HitsRatioCut[1]=2.2;
  HitsRatioCut[2]=0.998;
  HitsRatioCut[3]=0.998;
  MomentumCut[0][0]=-FLT_MAX;
  MomentumCut[0][1]=FLT_MAX;
  MomentumCut[1][0]=3;
  MomentumCut[1][1]=FLT_MAX;
  MomentumCut[2][0]=0.4;
  MomentumCut[2][1]=2.5;
  MomentumCut[3][0]=0.1;
  MomentumCut[3][1]=10;
  Chi2Cut[0]=3;
  Chi2Cut[1]=3;
  Chi2Cut[2]=100;
  Chi2Cut[3]=100;
  PatStart=0;
  MultiRun=0;
  EventsPerRun=10000001;
  int i;
  for(i=0;i<6;i++){
    Ladder[i]=0;
    ActiveParameters[i][0]=1;   // x
    ActiveParameters[i][1]=1;   // y
    ActiveParameters[i][2]=0;   // z
    ActiveParameters[i][3]=0;   // pitch  zx
    ActiveParameters[i][4]=1;   // yaw    xy
    ActiveParameters[i][5]=0;   // roll   yz
  }
}

TRCALIB_DEF TRCALIB;
//=============================
void TRALIG_DEF::init(){
  One=1.025;
  GlobalFit=0;
  InitDB=0;
  ReWriteDB=0;
  UpdateDB=0;
  MaxPatternsPerJob=50;
  MaxEventsPerFit=9999;
  MinEventsPerFit=999;
  for(int i=0;i<9;i++){
    Cuts[i][0]=0;
    Cuts[i][1]=0;
  }
  Cuts[0][1]=1;      // chi2 cut for alg=0
  Cuts[1][0]=0.992;   // cos  cut for alg =0 
  Cuts[2][0]=0.5;     //rel mom cut
  Cuts[2][1]=2;
  Cuts[3][0]=0;      // beta cut
  Cuts[3][1]=1.4;    
  Cuts[4][0]=0;      // beta pattern cut
  Cuts[4][1]=0;    
  Cuts[5][0]=0.5;      // mass cut
  Cuts[5][1]=2.0;    
  Cuts[6][0]=0.;         // betaerror cut
  Cuts[6][1]=0.04;   

  Algorithm=0;
  for( int i=0;i<6;i++){
    ActiveParameters[i][0]=1;   // x
    ActiveParameters[i][1]=1;   // y
    ActiveParameters[i][2]=1;   // z
    ActiveParameters[i][3]=1;   // pitch  zx
    ActiveParameters[i][4]=1;   // yaw    xy
    ActiveParameters[i][5]=1;   // roll   yz
  }
  EventsPerRun=1001;
  LayersOnly=0;
  GlobalGoodLimit=0.085;
  SingleLadderEntryLimit=10000;
}

TRALIG_DEF TRALIG;

//=============================

TRCLFFKEY_DEF TRCLFFKEY;

TRFITFFKEY_DEF TRFITFFKEY;
//=============================
