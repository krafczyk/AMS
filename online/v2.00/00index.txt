#  $Id: 00index.txt,v 1.3 2001/01/22 17:32:52 choutko Exp $

=========================================================================

     Introduction  to  a  Offline Monitor  Based  on  ROOT  and
     AMS Event  Display 

				
		  	     


-------------------------------------------------------------------------
1. Obtaining the program
------------------------

The program sources can be obtained by doing

	cvs checkout AMS/online

This will create AMS/online directory and put all source files
of AMS offline monitor into it.


-------------------------------------------------------------------------
2. Making the program
---------------------

This program is based on Rene Brun's ROOT and ATLFast program.  To build it,
cd to AMS/online directory, then type 

	gmake depend

followed by

	gmake standalone

and all .cxx files are compiled and linked into a shared library called
libAMS.so.  Please note that this has only been tested on alpha workstations
running DEC/UNIX.


-------------------------------------------------------------------------
3. Running the program
----------------------

To run it, please make sure you have the environment to run ROOT.
Only 3 things needs to be set:

1. Environment variable ROOTSYS  should point to the ROOT directory.
   (On boronams $ROOTSYS should be set to /cern/root/v2.00)
2. .:$ROOTSYS/lib is added into Environment variables LD_LIBRARY_PATH.
3. $ROOTSYS/bin is in your path.

Then you are ready to go.
Type h2root your_converted_ntuple_file_name your_preferred_name
Type offmon your_preferred_name.


-------------------------------------------------------------------------
4. Tutorial
----------------------

There is a short tutorial for this program.  You can find the postscript
version in the AMS/doc directory.


5. Relevant files

TCanvasImp          //aux
TMotifCanvas        //aux
TRadioButton        //aux
TSwitch             //aux
LinkDef             //aux
main                //main
*Hist               // Subdet fetch/book/fill/draw 
AMSHist             // abstract class for the *Hist
AMSNtuple           // Ntuple def
AMSDisplay          // Dispatcher
AMSCanvas           // Canvas
