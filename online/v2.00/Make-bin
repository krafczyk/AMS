##### MACROS #####

ROOTH         = TTree.h TFile.h TH1.h

SRCS          = AMSDisplay.cxx \
                AMSCanvas.cxx \
                AMSHist.cxx \
                AMSAntiHist.cxx\
                AMSTrackerHist.cxx\
                AMSCTCHist.cxx\
                AMSTOFHist.cxx\
                AMSLVL1Hist.cxx\
                AMSLVL3Hist.cxx\
                AMSAxAMSHist.cxx\
                AMSGenHist.cxx\
                AMSNtuple.cxx  ControlFrame.cxx\
		TRadioButton.cxx TSwitch.cxx Debugger.cxx \
		TRootCanvas.cxx 

HDRS          = TRadioButton.h TSwitch.h \
		Debugger.h \
		AMSCanvas.h \
		AMSDisplay.h \
		AMSHist.h \
		AMSAntiHist.h \
		AMSTrackerHist.h \
                AMSCTCHist.h\
                AMSTOFHist.h\
                AMSLVL1Hist.h\
                AMSLVL3Hist.h ControlFrame.h\
                AMSAxAMSHist.h\
                AMSGenHist.h\
                AMSNtuple.h\
                LinkDef.h


DICT          = AMSCint.cxx
DICTH         = $(DICT:.cxx=.h)
DICTO         = $(DICT:.cxx=.o)


MAIN          = main.cxx
MAINH         = $(MAIN:.cxx=.h)
MAINO         = $(MAIN:.cxx=.o)

MAINC          = mainc.cxx
MAINOC         = $(MAINC:.cxx=.o)

OBJS          = $(SRCS:.cxx=.o) $(DICTO)


ALLDICT       = $(DICT) $(DICTH) 
ALLSRCS       = $(SRCS)  $(HDRS)  $(ALLDICT) $(MAIN) $(MAINH) $(MAINC)
ALLOBJS       = $(OBJS) $(MAINO)


AMSLIB       = libAMS.a

AMSSHAREDLIB = libAMS.so


AMSPRG       = offmon
AMSPRGC       = offmonc



##### TARGETS #####
interprete:  $(AMSSHAREDLIB)

standalone:  $(AMSPRG)

realtime:  $(AMSPRGC)

$(AMSLIB):     $(DICT) $(OBJS)
		rm -f $(AMSLIB)
# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate
# a shared library. One must use ld instead.
		-$(SHLD) -o $(AMSLIB) $(OBJS)
		chmod 555 $(AMSLIB)
		@echo "$(AMSLIB) done with $(OBJS) linked in"

#		-ld  -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved \
# -g0 -O1 /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o \

$(AMSSHAREDLIB):      $(OBJS) $(DICT)
		rm -f $(AMSSHAREDLIB)
# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate
# a shared library. One must use ld instead.
		-$(SHLD) -o $(AMSSHAREDLIB)  $(OBJS) 
		chmod 555 $(AMSSHAREDLIB)
		@echo "$(AMSSHAREDLIB) done with $(OBJS) linked in"

# -ld  -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved \
# -g0 -O1 -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o \


#$(AMSGLIB):    $(DICTG) $(OBJSG)
#		rm -f $(AMSGLIB)
# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate
# a shared library. One must use ld instead.
#		ld  -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved \
# -g0 -O1 -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o \
# -o $(AMSGLIB)  $(OBJSG) -lcxxstd -lcxx -lexc -lots -lc
#		chmod 555 $(AMSGLIB)
#		@echo "$(AMSGLIB) done"

#$(AMSPRG):     $(AMSLIB) $(MAINO)
#		$(LD) $(LDFLAGS) $(MAINO) $(AMSLIB) $(PYTHIALIB) $(LIBS) \
#		-o $(AMSPRG)
#		@echo "$(AMSPRG) done"

$(AMSPRG):	$(AMSSHAREDLIB) $(MAINO)
		$(LD) $(LDFLAGS) $(MAINO) $(AMSSHAREDLIB) $(GLIBS) -o $(AMSPRG) 

$(AMSPRGC):	$(AMSSHAREDLIB) $(MAINOC)
		$(LD) $(LDFLAGS) $(MAINOC) $(AMSSHAREDLIB) $(GLIBS) -o $(AMSPRGC) 


$(DICT):        $(HDRS)
		@echo "Generating dictionary ..."
		rootcint -f $(DICT) -c $(ROOTH) $(HDRS)


$(DICTO):       $(DICT)
		$(CXX) $(NOOPT) $(CXXFLAGS) -c $(DICT)


depend:
		makedepend -fMake-depend -- $(CXXFLAGS) -- $(SRCS) $(SRCSG) \
		$(MAIN)

dist:
		rm -f $(AMSPRG).tar.gz ; \
		tar cvf $(AMSPRG).tar $(ALLSRCS) 00index.txt Make* ; \
		gzip $(AMSPRG).tar

clean:
		@rm -f $(ALLOBJS) $(ALLDICT)

