#include <vector>
#include <cmath>
#include <string>
#include <iostream>
#include <TDataType.h>

#define NNG new BDTGNode

#ifndef BDTGNode__def
#define BDTGNode__def

class BDTGNode {

public:

   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType,
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it decends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it decends the tree at this node to the left
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; }
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)
   double                  fCutValue; // cut value appplied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
};

//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
};

//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}

//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}

#endif

#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG()
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 17 ),
        fIsNormalised( false )
   {
      // initialize min and max vectors (for normalisation)
      fVmin[0] = -6.0924015045166;
      fVmax[0] = 12.3599834442139;
      fVmin[1] = -21.1570281982422;
      fVmax[1] = 17.4734325408936;
      fVmin[2] = -41.5081787109375;
      fVmax[2] = 21.8646183013916;
      fVmin[3] = -7.86570930480957;
      fVmax[3] = 57.6439514160156;
      fVmin[4] = -2.14711213111877;
      fVmax[4] = 37.4439163208008;
      fVmin[5] = -1.80294644832611;
      fVmax[5] = 45.9977340698242;
      fVmin[6] = -1.23390758037567;
      fVmax[6] = 19.6246242523193;
      fVmin[7] = -126.323043823242;
      fVmax[7] = 7.58003759384155;
      fVmin[8] = -175.006912231445;
      fVmax[8] = 4.6570258140564;
      fVmin[9] = -32.4339599609375;
      fVmax[9] = 31.6552600860596;
      fVmin[10] = -67.4279022216797;
      fVmax[10] = 9.59330558776855;
      fVmin[11] = -76.2045135498047;
      fVmax[11] = 11.5721845626831;
      fVmin[12] = -101.238121032715;
      fVmax[12] = 7.46057748794556;
      fVmin[13] = -125.416687011719;
      fVmax[13] = 10.2129001617432;
      fVmin[14] = -13.6568326950073;
      fVmax[14] = 20.6869277954102;
      fVmin[15] = -11.9844493865967;
      fVmax[15] = 147.394393920898;
      fVmin[16] = -15.1769227981567;
      fVmax[16] = 111.980087280273;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'F';
      fType[2] = 'F';
      fType[3] = 'F';
      fType[4] = 'F';
      fType[5] = 'F';
      fType[6] = 'F';
      fType[7] = 'F';
      fType[8] = 'F';
      fType[9] = 'F';
      fType[10] = 'F';
      fType[11] = 'F';
      fType[12] = 'F';
      fType[13] = 'F';
      fType[14] = 'F';
      fType[15] = 'F';
      fType[16] = 'F';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[17];
   double fVmax[17];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[17];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.277662,-0.0444676) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0454898,-0.090902) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00060183,-0.0998796) ,
10, -4.55363, 0, 0, 0.00907981,-0.49092) ,
10, -1.40972, 0, 0, 0.0680736,-0.431926)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.310509,-0.0299468) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0742285,-0.0765375) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00335176,-0.0914961) ,
0, 2.41059, 1, 0, 0.0189432,-0.437487) ,
5, 0.473276, 1, 0, 0.0698792,-0.387026)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.262658,-0.0347034) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0200685,-0.081236) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00203804,-0.084911) ,
13, -1.84202, 0, 0, 0.00390724,-0.409843) ,
7, -2.12345, 0, 0, 0.0690886,-0.349461)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.276329,-0.0268348) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0454168,-0.0704) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00128502,-0.0803635) ,
0, 3.13356, 1, 0, 0.0117237,-0.366369) ,
5, 0.848259, 1, 0, 0.0711623,-0.313052)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.272317,-0.0237814) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0052825,-0.0747499) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00216169,-0.0783954) ,
4, 3.50875, 1, 0, 0.00491662,-0.338486) ,
10, -1.97217, 0, 0, 0.0705599,-0.282925)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.320821,-0.0110242) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0712313,-0.0573385) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00287735,-0.072576) ,
0, 2.53596, 1, 0, 0.0188046,-0.297513) ,
5, 0.473276, 1, 0, 0.0708551,-0.255074)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.282276,-0.0150665) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0444237,-0.0599875) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00163973,-0.0698489) ,
11, -2.64011, 0, 0, 0.00842572,-0.278145) ,
10, -1.53178, 0, 0, 0.0704376,-0.230592)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.267549,-0.0139082) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0176675,-0.062407) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00122019,-0.0692485) ,
14, -2.73196, 0, 0, 0.0103353,-0.25304) ,
5, 0.930711, 1, 0, 0.0711967,-0.207523)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.277843,-0.00988948) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0524497,-0.0524481) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00201729,-0.0655581) ,
11, -2.46855, 0, 0, 0.00983734,-0.230586) ,
10, -1.53178, 0, 0, 0.0700721,-0.188343)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.313964,-0.000811161) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0636704,-0.0470585) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00140638,-0.0644366) ,
0, 3.13356, 1, 0, 0.0189589,-0.20514) ,
5, 0.473276, 1, 0, 0.0705031,-0.169904)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.277248,-0.00491929) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0467972,-0.0580967) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00177457,-0.0611089) ,
5, 0.450564, 1, 0, 0.00839762,-0.193585) ,
10, -1.53178, 0, 0, 0.0683008,-0.154962)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.25932,-0.00364769) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0228986,-0.0607885) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000622355,-0.0604919) ,
5, 0.701323, 1, 0, 0.00468217,-0.182405) ,
7, -2.02901, 0, 0, 0.0692799,-0.139713)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.274342,0.00125283) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0185968,-0.053334) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000136836,-0.0631126) ,
14, -4.11239, 0, 0, 0.0119581,-0.162332) ,
5, 0.825546, 1, 0, 0.0706399,-0.124954)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.321122,0.00855678) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0692878,-0.0366224) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0014044,-0.0597276) ,
0, 3.132, 1, 0, 0.0206666,-0.142044) ,
5, 0.431539, 1, 0, 0.0701573,-0.113024)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.264919,0.00527566) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0212194,-0.0588286) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00068849,-0.0573428) ,
5, 0.767594, 1, 0, 0.00456853,-0.143268) ,
7, -2.02901, 0, 0, 0.0690472,-0.103136)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.27958,0.00599995) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.013396,-0.0524958) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00606061,-0.0595756) ,
4, 3.23637, 1, 0, 0.0125217,-0.124299) ,
10, -1.26154, 0, 0, 0.0685995,-0.0935528)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.310829,0.0127247) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0307426,-0.0431326) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000367918,-0.0597655) ,
14, -3.40073, 0, 0, 0.0194903,-0.110751) ,
5, 0.473276, 1, 0, 0.0688328,-0.0839844)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.287047,0.00992399) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.02128,-0.0455306) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000596303,-0.0586059) ,
14, -3.2388, 0, 0, 0.0129758,-0.104623) ,
5, 0.743125, 1, 0, 0.0707132,-0.0751024)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.258045,0.0105163) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0260452,-0.0554844) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00101723,-0.0546286) ,
5, 0.450564, 1, 0, 0.00473765,-0.104454) ,
10, -2.13023, 0, 0, 0.069281,-0.0690917)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.286746,0.0173903) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0533516,-0.0463371) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000969268,-0.0546373) ,
5, 0.450564, 1, 0, 0.00845428,-0.0953178) ,
7, -1.4909, 0, 0, 0.0700533,-0.0615264)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.252594,0.0151598) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.184659,-0.00812978) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00608756,-0.052926) ,
7, -1.40132, 0, 0, 0.0184738,-0.0842836) ,
11, -1.3406, 0, 0, 0.071052,-0.0551311)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.321445,0.020627) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0287272,-0.0373696) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000263574,-0.0580803) ,
14, -3.84433, 0, 0, 0.0188628,-0.0756367) ,
5, 0.431539, 1, 0, 0.0687064,-0.0514322)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.2374,0.0118945) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00623053,-0.0578212) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000377548,-0.0534765) ,
5, 0.408762, 1, 0, 0.00119177,-0.0784057) ,
7, -2.93638, 0, 0, 0.0718381,-0.0445295)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.294051,0.0196724) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0230617,-0.0365986) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00168331,-0.056487) ,
14, -2.79246, 0, 0, 0.013994,-0.0672867) ,
5, 0.687479, 1, 0, 0.0706584,-0.0409367)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.277292,0.0160828) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0449306,-0.0422275) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00122212,-0.0519195) ,
5, 0.825546, 1, 0, 0.0102348,-0.0639928) ,
10, -1.40972, 0, 0, 0.068206,-0.0390735)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.210689,0.0144807) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0347299,-0.0466724) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00082203,-0.0526544) ,
10, -0.955805, 0, 0, 0.0075716,-0.0656757) ,
0, 1.77227, 1, 0, 0.0698745,-0.0345006)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.280776,0.0186213) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0500982,-0.0414494) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00178571,-0.0509114) ,
5, 0.450564, 1, 0, 0.00901342,-0.0559727) ,
10, -1.53178, 0, 0, 0.0697303,-0.0306597)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.206743,0.0149305) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0327154,-0.046386) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000956938,-0.0518119) ,
10, -0.955805, 0, 0, 0.0073232,-0.0574188) ,
0, 1.81576, 1, 0, 0.0683456,-0.0289047)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.286799,0.0197993) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0482691,-0.0382958) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000795594,-0.0511336) ,
5, 0.825546, 1, 0, 0.0103219,-0.0477622) ,
10, -1.40972, 0, 0, 0.0713877,-0.0238694)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.214934,0.0171329) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0385633,-0.0447566) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000902935,-0.0520095) ,
5, 0.425099, 1, 0, 0.00639118,-0.0508621) ,
13, -2.09064, 0, 0, 0.0704607,-0.0226431)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.216581,0.0198652) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0268817,-0.0478645) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000564932,-0.0512129) ,
10, -1.28934, 0, 0, 0.0062545,-0.0497568) ,
0, 1.81576, 1, 0, 0.0716601,-0.0200435)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.260368,0.0179262) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0201991,-0.0482668) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000931561,-0.0502065) ,
5, 0.662014, 1, 0, 0.00438395,-0.0426192) ,
10, -2.13023, 0, 0, 0.0694022,-0.0190739)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.190666,0.0182085) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0101687,-0.0531659) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0514567) ,
10, -1.90298, 0, 0, 0.00264011,-0.0476582) ,
0, 2.57577, 1, 0, 0.0711616,-0.0166467)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.229474,0.0218246) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0377568,-0.0425464) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00136257,-0.0502777) ,
5, 0.71766, 1, 0, 0.00825707,-0.04071) ,
11, -2.25084, 0, 0, 0.0693043,-0.0154481)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.249641,0.0174436) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0124098,-0.0501335) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000383289,-0.0509931) ,
5, 0.683698, 1, 0, 0.0025629,-0.0377913) ,
7, -2.37853, 0, 0, 0.0685173,-0.0154916)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.264921,0.0218846) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.011607,-0.0376613) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00183318,-0.0568011) ,
16, -2.94628, 0, 0, 0.0105416,-0.033983) ,
5, 0.921075, 1, 0, 0.070323,-0.0128014)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.1801,0.0161716) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00889171,-0.0528734) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000222222,-0.0519491) ,
10, -0.511324, 0, 0, 0.00186197,-0.03918) ,
0, 2.65574, 1, 0, 0.0680686,-0.0131643)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.252973,0.0240001) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0188943,-0.0339374) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00542118,-0.0521577) ,
6, 1.74282, 1, 0, 0.0173017,-0.030122) ,
11, -1.3406, 0, 0, 0.0703015,-0.0105046)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.267437,0.0206334) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0173669,-0.0469313) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00100395,-0.0485593) ,
5, 0.687479, 1, 0, 0.00399856,-0.0299707) ,
10, -2.13023, 0, 0, 0.0711011,-0.00873014)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.197631,0.0193509) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0226405,-0.0457534) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000585609,-0.0500182) ,
10, -1.07786, 0, 0, 0.00525192,-0.0320749) ,
0, 2.19593, 1, 0, 0.070365,-0.00858341)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.260356,0.0194324) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0149031,-0.0476497) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000612145,-0.0497028) ,
5, 0.628052, 1, 0, 0.00304708,-0.0282305) ,
7, -2.12345, 0, 0, 0.0682766,-0.00879797)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.220791,0.021884) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0321645,-0.0408017) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0007526,-0.049418) ,
10, -1.16374, 0, 0, 0.00722473,-0.0276925) ,
0, 1.72023, 1, 0, 0.0710122,-0.00617446)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.267241,0.0192131) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0232741,-0.0424926) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000809364,-0.0481612) ,
5, 0.743125, 1, 0, 0.00512924,-0.0241727) ,
10, -1.98204, 0, 0, 0.0696687,-0.00643306)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.160679,0.0167982) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00324006,-0.0544594) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0515825) ,
10, -0.955805, 0, 0, 0.00072459,-0.0311549) ,
0, 3.45465, 1, 0, 0.0685981,-0.00685434)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.207336,0.015344) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00750099,-0.0510935) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000586281,-0.0496514) ,
5, 0.393033, 1, 0, 0.00156565,-0.0245792) ,
12, -2.69706, 0, 0, 0.0677465,-0.00681748)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.219289,0.0204709) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0316302,-0.0387867) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000540979,-0.0494935) ,
10, -1.07786, 0, 0, 0.00676151,-0.0226516) ,
0, 1.72868, 1, 0, 0.0702772,-0.00398959)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.225235,0.0179307) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0127088,-0.0479315) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000963824,-0.0476421) ,
5, 0.450564, 1, 0, 0.0027297,-0.0217329) ,
12, -2.43024, 0, 0, 0.0708142,-0.00386304)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.188825,0.0193326) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00876669,-0.048678) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0505196) ,
10, -2.66489, 0, 0, 0.00263726,-0.0239484) ,
0, 2.58674, 1, 0, 0.0711688,-0.00325201)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.222583,0.0192072) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0239969,-0.0444763) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000825187,-0.0492065) ,
5, 0.425099, 1, 0, 0.0040446,-0.0213784) ,
8, -2.29781, 0, 0, 0.0705131,-0.00363955)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.165629,0.0173848) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00225734,-0.0536479) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0511088) ,
10, -1.10977, 0, 0, 0.000527983,-0.0242847) ,
0, 3.45637, 1, 0, 0.0702604,-0.00328293)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.231635,0.0194094) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0312702,-0.0401038) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00134659,-0.0463672) ,
5, 0.629526, 1, 0, 0.00631117,-0.0185798) ,
8, -2.00296, 0, 0, 0.0711565,-0.00243476)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.256352,0.0211032) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0270701,-0.0200403) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00876424,-0.0485496) ,
4, 3.50892, 1, 0, 0.0250923,-0.0141276) ,
11, -0.967344, 0, 0, 0.0715718,-0.00257597)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.185008,0.0165038) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.010236,-0.0480118) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000230822,-0.0497855) ,
10, -0.955805, 0, 0, 0.00236163,-0.020145) ,
0, 2.69445, 1, 0, 0.070523,-0.00294402)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.266382,0.0169921) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.025349,-0.0402773) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00106408,-0.0465033) ,
5, 0.393033, 1, 0, 0.00443019,-0.0164559) ,
10, -2.04274, 0, 0, 0.0699255,-0.00314763)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.185642,0.0172518) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00805755,-0.048869) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000153175,-0.0501014) ,
10, -0.955805, 0, 0, 0.00181466,-0.018646) ,
0, 2.69445, 1, 0, 0.070623,-0.00181566)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250454,0.0169775) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0127042,-0.0455812) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000544794,-0.0485448) ,
5, 0.425099, 1, 0, 0.00228275,-0.0160232) ,
7, -2.48966, 0, 0, 0.0695211,-0.00247344)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.266636,0.0168063) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0214044,-0.039762) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000999295,-0.045764) ,
5, 0.392611, 1, 0, 0.00376112,-0.0136435) ,
7, -2.12345, 0, 0, 0.0698825,-0.00131737)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.188079,0.0179774) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00895804,-0.0469769) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.050431) ,
10, -1.85588, 0, 0, 0.00232132,-0.0170218) ,
0, 2.69445, 1, 0, 0.0719496,-0.000801038)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.1606,0.0163819) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0203003,-0.025876) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0543851) ,
15, -4.36526, 0, 0, 0.0186899,-0.0154819) ,
9, -0.931952, 0, 0, 0.0690078,-0.00292432)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.285714,0.015165) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0462963,-0.0276254) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000853815,-0.0449312) ,
5, 0.768016, 1, 0, 0.00995073,-0.0118397) ,
10, -1.38359, 0, 0, 0.0707877,-0.00222407)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.225963,0.0181024) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0295927,-0.0328235) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000539374,-0.0481439) ,
0, 1.79201, 1, 0, 0.00974043,-0.01287) ,
13, -1.68095, 0, 0, 0.0705174,-0.000743902)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.159604,0.0148796) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00362406,-0.050562) ,
NNG(
0,
0,
-1, 0, 1, -99, 9.13743e-05,-0.0491094) ,
7, -2.12345, 0, 0, 0.0010608,-0.0162992) ,
0, 3.50742, 1, 0, 0.0686521,-0.00160677)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.261307,0.0143981) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0234841,-0.0382541) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00111457,-0.0432768) ,
5, 0.425099, 1, 0, 0.00432161,-0.0117235) ,
10, -2.08671, 0, 0, 0.0687253,-0.00189389)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.161445,0.0151618) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00239234,-0.0518124) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0519366) ,
10, -0.389266, 0, 0, 0.000470493,-0.0155624) ,
0, 3.57313, 1, 0, 0.0705092,-0.000874328)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.223885,0.0157027) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.050767,-0.0299982) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00166842,-0.0448973) ,
5, 0.425099, 1, 0, 0.00877332,-0.011632) ,
13, -1.64226, 0, 0, 0.0697542,-0.00129578)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.233192,0.0151021) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0355522,-0.0342779) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00166441,-0.0426257) ,
5, 0.425099, 1, 0, 0.00641365,-0.0105618) ,
8, -1.88314, 0, 0, 0.0698882,-0.000590521)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.182035,0.0183396) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.140568,0.0281516) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0029745,-0.0526544) ,
4, -1.29276, 0, 0, 0.0267937,-0.0104363) ,
4, -0.352617, 0, 0, 0.0689563,-0.00142621)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.190644,0.0181749) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.166065,0.0230316) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00721296,-0.0449263) ,
4, -1.07002, 0, 0, 0.0276189,-0.00979351) ,
4, -0.261824, 0, 0, 0.0711777,-0.000986414)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.282996,0.0144897) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0363008,-0.0287176) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00062818,-0.0451015) ,
5, 0.97359, 1, 0, 0.00866306,-0.00931224) ,
7, -1.4909, 0, 0, 0.0689,-0.00134995)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250294,0.0168989) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0809599,-0.020478) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00284228,-0.0352222) ,
5, 0.683698, 1, 0, 0.0174144,-0.00851044) ,
11, -1.3406, 0, 0, 0.0701648,-0.00052962)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.286406,0.0145477) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0142631,-0.0169583) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00417014,-0.0489847) ,
6, 1.73853, 1, 0, 0.0130937,-0.00726025) ,
10, -1.19416, 0, 0, 0.0693981,-0.000344005)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.177197,0.0174276) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.158964,0.0186452) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00572159,-0.0467346) ,
4, -1.15977, 0, 0, 0.0284159,-0.00948361) ,
4, -0.261825, 0, 0, 0.0678883,-0.00162142)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.28566,0.0139811) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0701623,-0.0199308) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00194575,-0.03559) ,
5, 0.687479, 1, 0, 0.0149773,-0.00727288) ,
10, -1.0721, 0, 0, 0.0695983,-0.000878007)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.24091,0.0150209) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0733852,-0.0211684) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00279645,-0.0370703) ,
5, 0.425099, 1, 0, 0.0133576,-0.0078723) ,
11, -1.83539, 0, 0, 0.0699734,-0.000338993)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.159105,0.0144493) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00363769,-0.0493196) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0519018) ,
10, -0.20298, 0, 0, 0.000668717,-0.0112429) ,
0, 3.51947, 1, 0, 0.0688854,2.86314e-05)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.227366,0.014745) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0106246,-0.0421973) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00046648,-0.0440612) ,
5, 0.604631, 1, 0, 0.00220848,-0.00839003) ,
12, -2.50913, 0, 0, 0.0728065,0.000781139)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.235044,0.0155516) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0174332,-0.00666454) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0131023,-0.0423073) ,
16, -0.920755, 0, 0, 0.0164138,-0.00750574) ,
0, 1.00568, 1, 0, 0.0689043,-0.000725494)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.22596,0.0137655) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0455537,-0.0258792) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00130787,-0.0383218) ,
5, 0.71766, 1, 0, 0.00986391,-0.007177) ,
13, -1.64226, 0, 0, 0.0701901,3.30548e-05)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.182146,0.0168577) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.155685,0.0217448) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00487226,-0.0464507) ,
4, -1.20735, 0, 0, 0.0281973,-0.00730202) ,
4, -0.352616, 0, 0, 0.070617,-0.000321321)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.188652,0.015887) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.02732,-0.0113231) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00526836,-0.0489109) ,
16, -2.16897, 0, 0, 0.0237945,-0.00723301) ,
4, -0.419152, 0, 0, 0.0706507,-0.000233109)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.221067,0.0127814) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0459631,-0.028105) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0010735,-0.0428087) ,
5, 0.616874, 1, 0, 0.00882829,-0.00767781) ,
13, -1.64226, 0, 0, 0.0680277,-0.000996868)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.105906,0.00931832) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0233797,-0.0400689) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000153327,-0.057292) ,
10, -0.955805, 0, 0, 0.00807999,-0.0133348) ,
14, -2.20891, 0, 0, 0.0692785,-0.00118275)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.252985,0.015603) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0250664,-0.0111316) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0079858,-0.0456865) ,
4, 3.50877, 1, 0, 0.0232404,-0.00535914) ,
11, -0.967344, 0, 0, 0.0698079,-5.66253e-05)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.180647,0.0111277) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.001716,-0.0513514) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000358372,-0.045769) ,
5, 0.380516, 1, 0, 0.000552724,-0.00814231) ,
10, -4.87982, 0, 0, 0.0697868,-0.000448579)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.258019,0.0104579) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0127634,-0.0365166) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000503208,-0.0409944) ,
5, 0.662014, 1, 0, 0.00264701,-0.00592984) ,
7, -2.37853, 0, 0, 0.0712496,-0.00021018)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.163534,0.0125023) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00396254,-0.0469705) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0516439) ,
10, -0.20298, 0, 0, 0.000739347,-0.00836378) ,
0, 3.57313, 1, 0, 0.0718692,0.000363008)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.184211,0.0169185) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.119598,0.0168887) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00166201,-0.0533456) ,
4, -1.42969, 0, 0, 0.0277907,-0.00592256) ,
4, -0.261809, 0, 0, 0.069186,-3.17087e-05)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.274412,0.0127869) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0363507,-0.0267092) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00163018,-0.0329111) ,
5, 0.393033, 1, 0, 0.00650586,-0.00562432) ,
10, -1.76219, 0, 0, 0.0699939,-7.65342e-05)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.118761,0.0126986) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0690498,-0.0339993) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00719212,-0.0229551) ,
10, -0.955805, 0, 0, 0.0222752,-0.00856262) ,
1, -0.922025, 0, 0, 0.0696378,-0.000106734)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.231322,0.0109383) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0170161,-0.0346656) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000974596,-0.0337475) ,
5, 0.616874, 1, 0, 0.00380045,-0.00564207) ,
12, -2.10632, 0, 0, 0.069937,-0.000149231)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.107907,0.010863) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0187919,-0.0401612) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000454545,-0.0602513) ,
10, -0.511324, 0, 0, 0.00615866,-0.01103) ,
14, -2.34018, 0, 0, 0.0707894,8.08211e-06)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.248191,0.0140668) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0316129,-0.00985103) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00782215,-0.0459381) ,
6, 1.74592, 1, 0, 0.0289413,-0.00461753) ,
11, -0.642939, 0, 0, 0.0680644,-0.000788333)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.18546,0.0131348) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.2,0.0201587) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0117227,-0.0338429) ,
4, -0.865858, 0, 0, 0.0262828,-0.00541514) ,
4, -0.352616, 0, 0, 0.0701907,-0.000547303)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.218909,0.0102476) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0428529,-0.0262878) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00116317,-0.0375857) ,
5, 0.645677, 1, 0, 0.00855837,-0.00558229) ,
13, -1.68095, 0, 0, 0.0682078,-0.000826208)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.192316,0.0107473) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00248834,-0.0490011) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000373051,-0.0393434) ,
5, 0.687479, 1, 0, 0.000782284,-0.00609508) ,
10, -4.62723, 0, 0, 0.0717694,0.000147851)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.186482,0.0141906) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0278138,-0.0133551) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0526685) ,
15, -4.36526, 0, 0, 0.0257267,-0.00514174) ,
4, -0.352571, 0, 0, 0.0701118,-0.000177774)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.266341,0.0089224) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0367973,-0.02373) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00129381,-0.0326649) ,
5, 0.450564, 1, 0, 0.00651989,-0.00452317) ,
10, -1.7926, 0, 0, 0.0692711,-0.000703729)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.2816,0.0119169) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0296778,-0.0250725) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0010803,-0.0325631) ,
5, 0.662014, 1, 0, 0.00608911,-0.00409848) ,
7, -1.66279, 0, 0, 0.0697975,0.000527421)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.241176,0.0110783) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.171575,-0.0297504) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.010961,-0.0163118) ,
5, 0.687479, 1, 0, 0.0172233,-0.00436235) ,
0, 0.937078, 1, 0, 0.0694434,-0.000629341)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.1612,0.0118705) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0202161,-0.0169746) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00331126,-0.0477377) ,
10, 2.12911, 1, 0, 0.0190174,-0.00513073) ,
9, -0.931952, 0, 0, 0.0693291,-0.00010579)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.183281,0.0122697) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.130034,0.0152392) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00330852,-0.0474566) ,
4, -1.30281, 0, 0, 0.0250395,-0.00485112) ,
4, -0.373504, 0, 0, 0.0691556,-0.000630988)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250157,0.0153372) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.173508,0.0105605) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00101197,-0.0460984) ,
10, -2.5641, 0, 0, 0.030409,-0.00309177) ,
11, -0.649618, 0, 0, 0.0704204,0.000420877)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.118258,0.0103861) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.47806,0.0268236) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00913558,-0.0433474) ,
4, -0.434276, 0, 0, 0.0242217,-0.00648303) ,
1, -0.84711, 0, 0, 0.0699087,-0.000359881)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.237898,0.0173513) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0421992,-0.00604786) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00803536,-0.0481381) ,
6, 1.73857, 1, 0, 0.0383697,-0.00335224) ,
11, -0.276363, 0, 0, 0.0695394,-0.000105494)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.242714,0.00838455) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0509404,-0.0217651) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00151601,-0.0342348) ,
5, 0.701323, 1, 0, 0.0111399,-0.00446266) ,
11, -1.83539, 0, 0, 0.0692651,-0.00116701)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.11964,0.0110665) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0602446,-0.0314579) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00406091,-0.0292117) ,
10, -1.07786, 0, 0, 0.018064,-0.0061361) ,
1, -1.03195, 0, 0, 0.0690506,0.000132457)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.183239,0.0116421) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.120552,0.0119642) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00187253,-0.0488071) ,
4, -1.42891, 0, 0, 0.0282445,-0.00366479) ,
4, -0.261824, 0, 0, 0.0700475,-0.000171863)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.209385,0.010277) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00598086,-0.0420229) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000588466,-0.035583) ,
5, 0.393033, 1, 0, 0.00134816,-0.00408625) ,
12, -2.89168, 0, 0, 0.0697262,0.000485738)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.273702,0.0102355) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0220872,-0.0250443) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00104603,-0.0200203) ,
5, 0.687479, 1, 0, 0.00488075,-0.00312317) ,
10, -1.97217, 0, 0, 0.0706249,0.000467553)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.187681,0.0149004) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.172731,0.0117424) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00640335,-0.0369593) ,
4, -1.06979, 0, 0, 0.0280568,-0.0036867) ,
4, -0.261809, 0, 0, 0.0703104,0.000349858)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.261151,0.0115645) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0251283,-0.00910559) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00495458,-0.0491331) ,
6, 1.69187, 1, 0, 0.0228155,-0.00326397) ,
11, -0.967344, 0, 0, 0.070226,-0.000324558)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.184324,0.00969613) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0138289,-0.0396193) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00049491,-0.0439125) ,
5, 0.379959, 1, 0, 0.00236967,-0.00444927) ,
13, -3.23468, 0, 0, 0.0699389,0.000112273)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.252093,0.0158321) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0635838,0.0172314) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0318695,-0.02188) ,
1, 0.917521, 0, 0, 0.0390632,-0.00258099) ,
0, 0.132271, 1, 0, 0.0729305,0.000165732)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.133879,0.00911299) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0112398,-0.0409799) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00110088,-0.04189) ,
5, 0.685172, 1, 0, 0.00340347,-0.00546136) ,
16, 2.98836, 1, 0, 0.0698839,-5.92392e-06)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.106682,0.00759658) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.013843,-0.0392407) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0538194) ,
12, -2.48989, 0, 0, 0.00682003,-0.00689382) ,
14, -2.20891, 0, 0, 0.0695297,-0.000332064)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0982277,0.00558263) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0236287,-0.0447731) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000513611,-0.0404228) ,
10, -1.76351, 0, 0, 0.00718548,-0.00706949) ,
3, -1.62669, 0, 0, 0.0697062,-0.000542997)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.233034,0.013169) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.207786,0.00604752) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00160478,-0.0398519) ,
10, -2.5641, 0, 0, 0.04039,-0.00215777) ,
11, -0.241311, 0, 0, 0.069786,-7.9177e-05)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.243576,0.0142575) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0866745,0.00640114) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0129806,-0.0347092) ,
1, -0.463346, 0, 0, 0.040565,-0.00233726) ,
0, -0.0159114, 1, 0, 0.0693039,-0.000278468)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.258522,0.00918742) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0245184,-0.0237224) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0013878,-0.0148271) ,
5, 0.450564, 1, 0, 0.00478691,-0.00248248) ,
10, -2.16161, 0, 0, 0.0708221,0.000589035)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.264785,0.012783) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0254132,-0.00882875) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000609013,-0.0614059) ,
4, 5.03087, 1, 0, 0.0234629,-0.00260687) ,
11, -0.967344, 0, 0, 0.0713792,0.000267205)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.215227,0.0107752) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0307035,-0.0225136) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00103835,-0.031772) ,
5, 0.425099, 1, 0, 0.00528306,-0.00271729) ,
13, -2.2123, 0, 0, 0.0710138,0.000958084)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.252671,0.0155559) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0742309,0.00899765) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0237391,-0.0243635) ,
1, 0.134457, 0, 0, 0.0395493,-0.00202337) ,
0, -0.0159114, 1, 0, 0.0698036,4.18321e-05)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.10715,0.00695499) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.457983,-0.0396991) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00751228,-0.022769) ,
5, 0.710192, 1, 0, 0.0176066,-0.00533225) ,
14, -1.64375, 0, 0, 0.070834,-0.000360291)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.208681,0.00828149) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00285896,-0.0453462) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000420787,-0.0272258) ,
5, 0.673077, 1, 0, 0.000861722,-0.00296603) ,
12, -3.08322, 0, 0, 0.0716126,0.000425334)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.251501,0.0104522) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.117874,0.00680598) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0034078,-0.0391393) ,
4, -1.28008, 0, 0, 0.0356366,-0.00223529) ,
0, 0.1934, 1, 0, 0.0710604,-0.000482644)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0872513,0.00945849) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.363158,-0.050836) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0438986,-0.0153885) ,
4, 1.62346, 0, 0, 0.0486339,-0.00506621) ,
14, -0.573495, 0, 0, 0.0683924,-0.000714463)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.18772,0.0073962) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00255591,-0.0442503) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000299088,-0.0324932) ,
5, 0.662014, 1, 0, 0.000727096,-0.00284093) ,
10, -4.74251, 0, 0, 0.0709936,0.000299946)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.137013,0.0080327) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0073141,-0.0371641) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000494071,-0.0429676) ,
0, 1.44134, 1, 0, 0.00307267,-0.00399357) ,
16, 3.03651, 1, 0, 0.0711209,0.00020469)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.185268,0.00771467) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0758372,0.0080068) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00046573,-0.052558) ,
4, -1.65352, 0, 0, 0.024664,-0.00245923) ,
4, -0.419152, 0, 0, 0.0705466,-0.00033522)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.255775,0.00978698) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0618705,0.0060828) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00852063,-0.0255334) ,
16, 1.87399, 1, 0, 0.0242911,-0.00185228) ,
11, -0.967344, 0, 0, 0.0711324,0.000193235)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.260983,0.0109224) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.203587,-0.0154319) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0155329,-0.00824291) ,
7, -0.499914, 0, 0, 0.0240343,-0.00179155) ,
11, -0.967344, 0, 0, 0.0721912,0.000425829)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.24866,0.0120685) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0402697,-0.00434201) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0275229,-0.0566407) ,
4, 1.4601, 1, 0, 0.0395243,-0.00182611) ,
0, 0.0583935, 1, 0, 0.0706921,-0.000187287)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.256244,0.00909518) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.247183,-0.0179101) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0116034,-0.00773632) ,
5, 0.710192, 1, 0, 0.0272881,-0.00223006) ,
0, 0.485117, 1, 0, 0.0713664,-0.00043749)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.2875,0.00792236) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0787776,-0.0132071) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00310507,-0.0184221) ,
5, 0.393033, 1, 0, 0.0137274,-0.00212839) ,
10, -1.1667, 0, 0, 0.0700984,-0.000193588)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.251037,0.0144649) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.118267,0.00729576) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00371911,-0.0353431) ,
4, -1.24531, 0, 0, 0.0354228,-0.00156456) ,
0, 0.1934, 1, 0, 0.0710235,0.000520871)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0962738,0.00420274) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0292867,-0.0401409) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00193486,-0.0247852) ,
10, -1.19831, 0, 0, 0.0088953,-0.00507746) ,
3, -1.57774, 0, 0, 0.0687751,-0.000509579)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.185252,0.00872291) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.229805,0.0215948) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0189045,-0.0172466) ,
4, -0.609276, 0, 0, 0.0267565,-0.00197293) ,
4, -0.352617, 0, 0, 0.0698482,4.16259e-05)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.251352,0.00823794) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0320968,-0.00659088) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0673631) ,
4, 6.72084, 1, 0, 0.0303564,-0.00185549) ,
11, -0.642939, 0, 0, 0.0706137,-0.000331496)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0786885,-0.0204351) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.177607,0.0177329) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000660647,-0.0494496) ,
4, -1.58995, 0, 0, 0.0690975,0.00157331) ,
6, 0.711934, 0, 0, 0.07055,0.000107488)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0731165,-0.00039833) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0115607,-0.0875066) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0510438) ,
15, 5.26385, 1, 0, 0.00121065,-0.012222) ,
6, 2.73919, 1, 0, 0.0686182,-0.000876724)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.287729,0.00917921) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0754764,-0.0128966) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0015888,-0.0288976) ,
5, 0.687479, 1, 0, 0.0156324,-0.00251184) ,
10, -1.0721, 0, 0, 0.0700724,-0.000441314)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.291504,0.00650331) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0471744,-0.0172233) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000747689,-0.0196303) ,
0, 1.71883, 1, 0, 0.0145295,-0.00252579) ,
10, -1.0721, 0, 0, 0.0711733,-0.000872563)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.181448,0.0104422) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00172473,-0.0471714) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000528142,-0.0118459) ,
5, 0.616874, 1, 0, 0.000742896,-0.00214572) ,
10, -4.87982, 0, 0, 0.070132,0.00127036)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.242847,0.0180948) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.160219,0.00975947) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0186881,-0.0175462) ,
0, -0.0159114, 1, 0, 0.0407264,-0.00103775) ,
11, -0.276363, 0, 0, 0.0721094,0.00113546)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.182354,0.0068898) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.320652,-0.0469655) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0251579,-0.0122421) ,
0, -0.215773, 1, 0, 0.0279688,-0.00250335) ,
4, -0.261825, 0, 0, 0.0695452,-0.000762252)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.230354,0.00730666) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0353948,-0.0208883) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00147938,-0.0218569) ,
5, 0.408762, 1, 0, 0.00611897,-0.00165083) ,
8, -2.00296, 0, 0, 0.070668,0.00047732)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0956938,0.0106417) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.214286,-0.0797435) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.037694,-0.0115628) ,
6, 0.761037, 0, 0, 0.0402945,-0.00376148) ,
14, -0.854934, 0, 0, 0.0697216,0.000113714)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.241547,0.0126227) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.135462,0.0134233) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0275359,-0.0154874) ,
11, 0.260849, 0, 0, 0.0416612,-0.00115783) ,
0, -0.024684, 1, 0, 0.0696231,0.000213574)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.103499,0.00418702) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0165441,-0.0332134) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0568513) ,
10, -0.955805, 0, 0, 0.00573614,-0.00382401) ,
14, -2.45517, 0, 0, 0.0685478,-0.000380808)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0982461,0.00825162) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.526868,-0.0224182) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00940975,-0.00902837) ,
5, 1.02098, 1, 0, 0.0411146,-0.00336839) ,
14, -0.825111, 0, 0, 0.0713773,-0.000111)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.139399,0.00799396) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00937819,-0.0318357) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000713012,-0.0331901) ,
0, 1.44134, 1, 0, 0.0039039,-0.00293793) ,
16, 2.76156, 1, 0, 0.0704295,0.000383925)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.141236,0.00509491) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.000307598,-0.0497103) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0504074) ,
10, -0.955805, 0, 0, 7.42611e-05,-0.00269553) ,
0, 4.45182, 1, 0, 0.0692957,-0.000108053)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.214658,0.0133303) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.119152,0.00259769) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00112986,-0.041427) ,
15, 2.7854, 1, 0, 0.0458394,-0.00122501) ,
11, 0.0536306, 0, 0, 0.0690999,0.000119818)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.101222,0.00634935) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.142857,-0.0312123) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00240067,-0.0333385) ,
2, -1.75468, 0, 0, 0.0115575,-0.00401829) ,
3, -1.42523, 0, 0, 0.0712545,0.000127153)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0749686,0.000484192) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.140351,-0.0541889) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00387097,-0.0258504) ,
8, -1.8436, 0, 0, 0.0132212,-0.00705619) ,
6, 1.74588, 1, 0, 0.0691276,-0.000547789)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.286542,0.00691799) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0204134,-0.0167634) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0034439,0.114657) ,
9, -4.24818, 0, 0, 0.016006,-0.00161422) ,
10, -1.0721, 0, 0, 0.0704347,-0.000154759)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.162393,0.00697461) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00475907,-0.0372557) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0527227) ,
10, -1.07786, 0, 0, 0.00105953,-0.00212716) ,
5, 2.87821, 1, 0, 0.0702836,0.000413324)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.172604,0.00574085) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0422136,0.00570352) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0298482,-0.021101) ,
14, -0.233928, 0, 0, 0.0347764,-0.00182293) ,
9, -0.314959, 0, 0, 0.070063,-0.000572435)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.072068,-0.00229905) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00581395,-0.0868261) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0507586) ,
10, -7.18048, 0, 0, 0.000616143,-0.00837613) ,
6, 2.73003, 1, 0, 0.0676413,-0.00110631)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250857,0.01079) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.222301,-0.0125806) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00940439,-0.00228289) ,
5, 1.02098, 1, 0, 0.0362436,-0.0015239) ,
0, 0.132271, 1, 0, 0.0694929,-0.000205977)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.179315,0.00746673) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0010327,-0.0472467) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0004597,-0.0266632) ,
0, 0.278225, 1, 0, 0.000564016,-0.00174688) ,
10, -5.0774, 0, 0, 0.0705927,0.000697878)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0712834,0.00298) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.278832,-0.0383757) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0210722,0.000843018) ,
14, 1.06192, 1, 0, 0.0662065,-0.00720594) ,
6, 0.747719, 1, 0, 0.0705209,-0.000455649)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.255549,0.0105835) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0941568,-0.00872545) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00199071,-0.0111877) ,
0, 1.70895, 1, 0, 0.0300793,-0.00152483) ,
11, -0.642939, 0, 0, 0.0704737,6.40625e-05)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.118417,0.00589164) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0152266,-0.03874) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00155913,-0.0155941) ,
10, -0.955805, 0, 0, 0.00501702,-0.00259073) ,
1, -1.80394, 0, 0, 0.0702795,0.000259386)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.230188,0.00928798) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0744671,-0.0108218) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000902039,-0.0121335) ,
2, -3.57798, 0, 0, 0.0374256,-0.00202779) ,
11, -0.276363, 0, 0, 0.0676928,-0.000802652)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0775273,0.00939663) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.602953,-0.0175862) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00730164,-0.00987678) ,
0, 1.83455, 1, 0, 0.0636157,-0.00359929) ,
14, -0.330144, 0, 0, 0.0703386,-0.000650144)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.26384,0.00758937) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0329625,0.00255496) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00952488,-0.0357655) ,
14, -0.401595, 0, 0, 0.0230733,-0.000953897) ,
11, -0.967344, 0, 0, 0.0703374,0.000292178)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.210242,0.00758018) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0296154,-0.0189661) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00122842,-0.0171454) ,
5, 0.425099, 1, 0, 0.00531356,-0.00141267) ,
13, -2.2123, 0, 0, 0.0700246,0.000603201)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.237837,0.00809878) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.132249,0.0121537) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0307039,-0.0128576) ,
0, -0.752628, 1, 0, 0.0390936,-0.00127156) ,
11, -0.241311, 0, 0, 0.0695982,-0.000269666)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0763781,0.00755119) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.497706,-0.0326386) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0498344,-0.00624634) ,
4, 0.797892, 0, 0, 0.0643863,-0.0026637) ,
14, -0.330144, 0, 0, 0.0702509,-0.000412369)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.246513,0.0128791) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0838102,0.00710292) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0140068,-0.0196794) ,
1, -0.278354, 0, 0, 0.0385579,-0.000484466) ,
0, 0.0568749, 1, 0, 0.0697365,0.000787581)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.173086,0.00405029) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00167504,-0.0452219) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000293923,-0.02995) ,
5, 0.425099, 1, 0, 0.000500094,-0.00161836) ,
10, -5.0774, 0, 0, 0.0681265,-7.5718e-05)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0806637,-0.00815868) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.503772,0.0324354) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00235942,-0.0189915) ,
12, -2.83329, 0, 0, 0.0549934,0.00401265) ,
14, 0.2022, 1, 0, 0.069525,0.000428544)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.25519,0.00804822) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0336918,-0.0202073) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0256779,0.00766025) ,
14, 0.501478, 1, 0, 0.029819,-0.00121827) ,
11, -0.642939, 0, 0, 0.0705833,-9.23318e-07)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.127461,0.0047256) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.000973394,-0.0485722) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0508512) ,
10, -0.955805, 0, 0, 0.000248262,-0.00226774) ,
5, 4.95758, 1, 0, 0.0693578,6.41917e-05)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.233139,0.0127436) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.107459,0.0257217) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0372345,-0.00596167) ,
10, 1.03945, 0, 0, 0.0397402,-0.00067454) ,
11, -0.241311, 0, 0, 0.070062,0.000653957)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0715744,0.00173192) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0359281,-0.0701314) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0506121) ,
14, 1.5403, 1, 0, 0.00759494,-0.0124271) ,
2, 2.54918, 1, 0, 0.0696497,4.33155e-05)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.16445,0.00543331) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.307584,-0.0131915) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00848519,-0.00853123) ,
5, 0.710192, 1, 0, 0.0309208,-0.00168684) ,
6, -0.240641, 0, 0, 0.0677048,-0.000501841)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.282472,0.00620539) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0503836,-0.0111725) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000960557,-0.0130963) ,
5, 0.71766, 1, 0, 0.0103564,-0.00126046) ,
10, -1.38359, 0, 0, 0.069633,2.57617e-05)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0714586,-0.00946042) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.363592,0.02055) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00248336,-0.0305749) ,
13, -4.05525, 0, 0, 0.0635523,0.00188127) ,
14, -0.0487062, 1, 0, 0.0678287,-0.000466041)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.178272,0.00814719) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0549143,-0.0181249) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00559675,-0.00209054) ,
5, 0.431539, 1, 0, 0.0138168,-0.0012457) ,
15, 1.33859, 1, 0, 0.0701916,0.000595512)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.174845,0.0060643) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0567823,-0.0490557) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0173129,-0.00754072) ,
13, 0.641577, 0, 0, 0.0194197,-0.00169085) ,
15, 1.00422, 1, 0, 0.0692023,-0.000186935)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.190642,0.013555) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.323703,-0.0104371) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0141881,0.000443677) ,
5, 0.687479, 1, 0, 0.0594901,-0.00127684) ,
0, -0.741137, 1, 0, 0.0694834,-0.000635476)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.186998,0.00571118) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250233,-0.0159758) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00655682,-0.00187944) ,
5, 0.687479, 1, 0, 0.0205803,-0.00108786) ,
4, -0.542801, 0, 0, 0.0699301,9.83555e-05)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0743535,0.00244741) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0113636,-0.0991298) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00186567,-0.0302553) ,
14, 0.996532, 1, 0, 0.00280269,-0.00809996) ,
4, 4.76473, 1, 0, 0.0695004,2.95514e-05)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0764203,0.00192903) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.106383,-0.0678866) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00131349,-0.0364236) ,
8, -2.32463, 0, 0, 0.00930421,-0.00757524) ,
6, 1.74589, 1, 0, 0.0701215,-0.000268306)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0962841,0.00516604) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.318612,-0.0175503) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00236635,-0.0236846) ,
0, 1.87829, 1, 0, 0.0225556,-0.00268932) ,
3, -1.06446, 0, 0, 0.068465,-4.7439e-05)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0939213,-0.00712839) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.309129,0.0335408) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00043573,-0.0414975) ,
10, -4.47774, 0, 0, 0.0297713,0.00201701) ,
14, 0.745304, 1, 0, 0.0692544,-0.00054523)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.143939,0.0032126) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0969163,-0.0529574) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00545798,-0.0231394) ,
11, -1.32583, 0, 0, 0.006888,-0.00236593) ,
16, 2.06303, 1, 0, 0.068187,-0.000690581)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.138206,0.0045393) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00138841,-0.0419833) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0517582) ,
10, -0.511324, 0, 0, 0.000300458,-0.0016714) ,
0, 4.49931, 1, 0, 0.0682468,0.000137668)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.283867,0.0065328) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0581564,-0.00889706) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00154799,-0.00240405) ,
5, 0.768016, 1, 0, 0.0127507,-0.000876303) ,
10, -1.26154, 0, 0, 0.0690829,0.000258721)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0728696,0.0078297) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.607829,-0.0119737) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00736295,-0.00425596) ,
0, 1.87909, 1, 0, 0.0660698,-0.0021283) ,
14, -0.21406, 0, 0, 0.0692809,-0.000237569)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.249036,0.00970474) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.294272,-0.0117862) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0141339,0.000775455) ,
5, 0.687479, 1, 0, 0.0382148,-0.000868721) ,
0, 0.132271, 1, 0, 0.0714829,0.000157781)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.14039,0.00491724) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.000921942,-0.0440844) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0506067) ,
10, -0.955805, 0, 0, 0.000226398,-0.00158228) ,
0, 4.53861, 1, 0, 0.0700186,0.000281676)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.150794,0.00482618) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0410959,-0.0361798) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000708416,-0.0310941) ,
7, -2.35654, 0, 0, 0.00192387,-0.00146397) ,
11, -5.49971, 0, 0, 0.06849,0.000211809)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0763526,0.000457408) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0980392,-0.053538) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00134048,-0.0419732) ,
11, -3.0114, 0, 0, 0.00752823,-0.005454) ,
6, 1.73857, 1, 0, 0.0700532,-0.000396103)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.159945,0.00789855) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.049633,-0.0167452) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0199816,0.0076364) ,
14, 0.788613, 1, 0, 0.0342733,-0.00110965) ,
15, 0.405543, 1, 0, 0.0692926,0.000153904)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0705873,-8.0948e-05) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0740741,-0.0591033) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00739827,-0.0165276) ,
14, 1.19236, 1, 0, 0.0214216,-0.00908307) ,
2, 2.07593, 1, 0, 0.0686757,-0.000371209)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.174594,0.00850161) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0805873,-0.0240965) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0062551,-0.0138316) ,
5, 0.450564, 1, 0, 0.0190739,-0.00250373) ,
15, 0.975983, 1, 0, 0.0691116,-0.000377054)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.154238,0.00718915) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0526316,-0.0230158) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000569638,-0.0370536) ,
7, -2.17341, 0, 0, 0.0020744,-0.00140663) ,
11, -5.49971, 0, 0, 0.0704027,0.000729973)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.154081,0.00629499) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.346966,-0.0160436) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00489355,-0.0164566) ,
7, -1.55007, 0, 0, 0.0206148,-0.00209832) ,
16, 1.1125, 1, 0, 0.0704434,-0.000339305)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0704293,0.000696982) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0443686,-0.0526289) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00272109,-0.00635313) ,
14, 1.94815, 1, 0, 0.0145914,-0.00890026) ,
2, 2.0959, 1, 0, 0.0682314,-0.000198437)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.217878,0.010709) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.3174,-0.0168382) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0159708,-0.00108932) ,
5, 0.425099, 1, 0, 0.0379242,-0.00111135) ,
2, -0.278929, 0, 0, 0.069321,5.77866e-05)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0871022,0.0344246) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.249325,0.00851837) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.053229,-0.00590893) ,
0, -0.428975, 1, 0, 0.070155,-0.000730241) ,
0, -1.75205, 1, 0, 0.0705391,-0.000445293)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.146514,0.00829597) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0340076,-0.0250642) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00263564,0.0163656) ,
10, -1.53178, 0, 0, 0.0100597,-0.00118868) ,
9, -1.56443, 0, 0, 0.0713685,0.000921356)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.184899,0.00752686) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.287425,-0.0097258) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00755625,-0.00856867) ,
5, 0.710192, 1, 0, 0.0270284,-0.00130164) ,
4, -0.261809, 0, 0, 0.0691735,-4.70526e-05)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.205364,0.0149059) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.320214,-0.00842193) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0137106,0.00243201) ,
5, 0.710192, 1, 0, 0.0547086,-0.000717896) ,
0, -0.526587, 1, 0, 0.0690496,3.26925e-05)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.284978,0.00559905) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0207858,-0.0109666) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00206153,0.065177) ,
9, -3.74656, 0, 0, 0.0152215,-0.000868661) ,
10, -1.0721, 0, 0, 0.0686345,7.19048e-05)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.216522,0.0189897) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0655738,0.0122169) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0507322,-0.00594207) ,
1, 1.01208, 0, 0, 0.0542542,-6.00659e-05) ,
0, -0.462897, 1, 0, 0.0704522,0.000866093)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.162405,0.00454809) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00394298,-0.0341081) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0518695) ,
10, -1.04168, 0, 0, 0.00087607,-0.00132177) ,
5, 2.97457, 1, 0, 0.0712602,0.000205892)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0859111,0.00923853) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.135759,-0.0132448) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000661113,-0.00765216) ,
12, -2.88846, 0, 0, 0.0531803,-0.00252956) ,
3, -0.291379, 0, 0, 0.0705162,9.65319e-05)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.087715,-0.0137865) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.188287,0.00980536) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00182309,-0.0374753) ,
4, -1.47157, 0, 0, 0.064296,0.000290242) ,
4, 1.40006, 0, 0, 0.0679571,-0.000375192)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.214428,0.0106351) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0679876,-0.0101593) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0374316,0.00978688) ,
14, 0.512734, 1, 0, 0.0543875,-0.000541349) ,
7, 0.570205, 0, 0, 0.0696332,0.00011433)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.291299,0.00870868) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0208347,-0.011794) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00220386,0.0912336) ,
9, -4.26444, 0, 0, 0.0159585,-0.000935187) ,
10, -1.04465, 0, 0, 0.0711705,0.000434494)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.136153,0.00369848) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0198676,-0.0333759) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000345841,-0.0384994) ,
7, -4.86486, 0, 0, 0.00239845,-0.00206979) ,
16, 2.98836, 1, 0, 0.0703823,-0.000285373)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0739985,-0.0158136) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.179416,0.0113439) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00109353,-0.0401538) ,
4, -1.58023, 0, 0, 0.0701394,0.000874558) ,
6, 0.752663, 0, 0, 0.0707144,8.77067e-05)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.199355,-0.00775426) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0226838,0.029375) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000424538,-0.0416476) ,
4, -1.47693, 0, 0, 0.00500225,-0.000134452) ,
0, 2.00614, 1, 0, 0.0671662,-0.00147298)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0733257,0.00126422) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0502017) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0870953) ,
16, 5.52422, 0, 0, 0,-0.00706686) ,
6, 3.73241, 1, 0, 0.0702272,-2.0928e-05)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.138586,0.0054194) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0940594,-0.0280764) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00129801,-0.0335971) ,
7, -1.63435, 0, 0, 0.00270697,-0.00187137) ,
16, 2.98836, 1, 0, 0.0708475,0.00010508)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.119105,0.00727232) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.034034,-0.03107) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0034546,0.00393829) ,
10, -0.955805, 0, 0, 0.0109299,-0.00152195) ,
1, -1.32571, 0, 0, 0.0685938,0.0006297)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.17077,0.00583645) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.200375,-0.0121898) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00902355,-0.00552139) ,
7, -1.06691, 0, 0, 0.0205033,-0.000977168) ,
15, 0.975983, 1, 0, 0.0683914,0.000133294)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.28864,0.00448617) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0791843,-0.00996933) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00185142,-0.018383) ,
5, 0.629949, 1, 0, 0.015717,-0.00134483) ,
10, -1.04168, 0, 0, 0.070368,-0.000495242)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0953031,0.00725514) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.580189,-0.0197021) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0122937,-0.00245107) ,
5, 0.710192, 1, 0, 0.0411605,-0.00162116) ,
14, -0.813567, 0, 0, 0.0696777,0.000224565)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.218519,0.0121026) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.177175,0.00892062) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0212845,-0.0124795) ,
0, 0.12567, 1, 0, 0.0472145,-0.000530935) ,
11, 0.0536306, 0, 0, 0.070244,0.000372427)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.23094,0.00691509) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.203856,-0.0102826) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.022365,0.00114188) ,
2, -1.00705, 0, 0, 0.047074,-0.000673552) ,
0, -0.279179, 1, 0, 0.0690086,-0.000195658)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.288772,0.00577418) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0202007,-0.0098905) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00280435,0.071043) ,
9, -3.85421, 0, 0, 0.0152053,-0.000668884) ,
10, -1.0721, 0, 0, 0.0703181,0.00022637)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.118479,0.00431873) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.465986,0.0233181) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0103409,-0.0294865) ,
2, -0.0848052, 0, 0, 0.0203761,-0.00166132) ,
1, -0.922025, 0, 0, 0.0686625,-0.000116644)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.186264,-0.00780597) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0487945,0.00449254) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0397727,-0.0391808) ,
6, 0.833325, 1, 0, 0.0480939,0.000138744) ,
2, 0.0829964, 0, 0, 0.0681304,-0.000393639)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.160494,0.00719667) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0455635,-0.0594063) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0340012,-0.00703497) ,
12, 0.549319, 0, 0, 0.0342545,-0.0013493) ,
15, 0.405543, 1, 0, 0.0694944,-0.000178077)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.229115,0.0128995) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0545511,-0.0111934) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.018453,0.00670777) ,
14, 1.03597, 1, 0, 0.0394749,-0.00100719) ,
11, -0.241311, 0, 0, 0.0685784,0.000175291)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0767606,0.00672312) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.604448,-0.0106687) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00782889,-0.000595792) ,
0, 1.83595, 1, 0, 0.0628617,-0.00146031) ,
14, -0.330144, 0, 0, 0.0695827,-4.62074e-05)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0998967,0.00439858) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.157143,-0.0284954) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00182749,-0.0290592) ,
2, -1.74677, 0, 0, 0.0117473,-0.00247666) ,
3, -1.42873, 0, 0, 0.0703924,-2.38184e-05)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.116746,0.00481516) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.266208,-0.0126649) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000735655,-0.0286649) ,
0, 2.59769, 1, 0, 0.0211289,-0.00163248) ,
1, -0.922025, 0, 0, 0.0684676,-3.53133e-05)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.176303,0.00502562) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0555289,-0.0134523) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00222488,0.00610345) ,
0, 1.72868, 1, 0, 0.0207973,-0.0012274) ,
15, 0.975983, 1, 0, 0.0704909,-0.000154146)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.293253,-0.004682) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0466025,0.0121675) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000144113,-0.0455457) ,
0, 4.13614, 1, 0, 0.0159658,0.000303983) ,
5, 0.645677, 1, 0, 0.0706766,-0.000385862)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0712689,-0.00601932) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.434349,0.0129049) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00145194,-0.0194963) ,
10, -4.20892, 0, 0, 0.0628063,0.00144242) ,
14, -0.0487062, 1, 0, 0.0674029,-6.88293e-05)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.185185,0.0151043) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0633062,6.00219e-05) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0136986,-0.0594305) ,
2, 2.37675, 1, 0, 0.06272,-0.0001463) ,
0, -0.878346, 1, 0, 0.0710731,0.000301775)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.208449,-0.0041731) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0317626,0.0376823) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000348092,-0.0427677) ,
4, -1.47691, 0, 0, 0.00697611,0.000526188) ,
0, 1.87909, 1, 0, 0.0698632,-0.000331342)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.242348,0.0113145) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.176499,-0.012023) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00713306,0.0061674) ,
0, 1.81597, 1, 0, 0.0382497,-0.000968761) ,
0, 0.0583935, 1, 0, 0.0689498,1.48911e-05)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.147162,0.00557554) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.16632,-0.0209791) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0023622,-0.0109065) ,
7, -1.99222, 0, 0, 0.00781953,-0.00133815) ,
16, 2.06303, 1, 0, 0.0701056,0.000205199)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.117814,0.00689105) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.516616,0.00986026) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00308944,-0.0351489) ,
0, 0.859672, 1, 0, 0.0274887,-0.00108713) ,
1, -0.734735, 0, 0, 0.069962,0.000496266)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.161427,0.00990307) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0427777,-0.0179848) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0257757,0.00432722) ,
14, 0.501478, 1, 0, 0.0334537,-0.00112349) ,
15, 0.479036, 1, 0, 0.0696697,0.000284765)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0774648,0.0195202) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.289889,0.00749399) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0512809,-0.00611995) ,
12, 0.304202, 0, 0, 0.0680465,-0.000585901) ,
10, 1.25815, 0, 0, 0.0687574,-0.000147477)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.246523,0.0104053) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.100796,0.0467324) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0369749,-0.00610235) ,
10, 1.15799, 0, 0, 0.0391398,-0.000408247) ,
11, -0.276363, 0, 0, 0.0718994,0.000518203)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0911111,-0.00415436) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.458375,0.0165916) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00210147,-0.00870726) ,
12, -2.76363, 0, 0, 0.0434941,0.00152341) ,
14, 0.421256, 1, 0, 0.0712058,2.60979e-05)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.154663,0.00535308) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.151976,0.0202071) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00907358,-0.0146892) ,
10, 0.452443, 0, 0, 0.0120994,-0.000940803) ,
16, 1.6256, 1, 0, 0.0703437,0.000275949)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.208798,-0.0032746) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.034354,0.0267728) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000482892,-0.0389945) ,
4, -1.47693, 0, 0, 0.00783233,0.000408696) ,
0, 1.78355, 1, 0, 0.068841,-0.000232526)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.150658,0.00354665) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.219396,-0.0157323) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00270819,-0.0096431) ,
7, -1.90794, 0, 0, 0.0115592,-0.00122126) ,
16, 1.6256, 1, 0, 0.0695958,-0.000185067)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.105965,0.00429753) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.513274,-0.0208177) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00427509,-0.010702) ,
0, 1.8444, 1, 0, 0.0198216,-0.00154529) ,
14, -1.47628, 0, 0, 0.0697313,4.91293e-05)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.146698,0.00619576) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.445266,-0.0109649) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0148541,-0.00701236) ,
7, -0.76984, 0, 0, 0.0313474,-0.00122203) ,
16, 0.603585, 1, 0, 0.0692398,-0.00013811)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.25013,0.006831) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.104441,-0.0177925) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0284039,0.00371285) ,
4, 0.0231307, 0, 0, 0.0380713,-0.000306216) ,
0, 0.0583935, 1, 0, 0.0688862,0.000214107)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0702101,0.00646085) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.27881,-0.0443916) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0651917,-0.00267349) ,
6, 0.941413, 0, 0, 0.069347,-0.0012086) ,
14, -0.21406, 0, 0, 0.0697595,-3.16642e-05)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0883721,0.02342) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.164673,-0.005032) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00502305,0.0170921) ,
2, -2.73335, 0, 0, 0.0702219,-0.000549645) ,
10, 1.30788, 0, 0, 0.0715472,-5.80203e-05)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.290444,0.00742434) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0159349,-0.0022541) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00306435,-0.0535056) ,
2, 2.07593, 1, 0, 0.0153348,-0.000498121) ,
10, -1.04168, 0, 0, 0.0709128,0.000499008)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.222132,0.0100035) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.173496,0.0218413) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0382702,-0.0048348) ,
10, 0.68154, 0, 0, 0.0451174,-0.00022375) ,
11, 0.0189877, 0, 0, 0.0700523,0.000489857)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.239389,0.00867827) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.292085,-0.0139879) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0158676,0.00635353) ,
5, 0.636867, 1, 0, 0.0382393,-0.000419438) ,
0, 0.132271, 1, 0, 0.0698055,0.000262465)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0840065,0.0408986) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0695925,0.00127131) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0607645,-0.0165825) ,
6, 0.895072, 1, 0, 0.0685396,-0.000194783) ,
0, -1.74736, 1, 0, 0.0689039,7.52648e-05)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.215976,0.00887706) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0527557,-0.0139223) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0420516,0.00797022) ,
14, 0.22004, 1, 0, 0.0474229,-0.000640434) ,
11, 0.0536306, 0, 0, 0.0703548,2.03513e-05)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.216521,0.0198495) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0713682,-0.0376581) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0512137,0.0043054) ,
4, 1.05944, 0, 0, 0.0532233,-0.000249201) ,
0, -0.462897, 1, 0, 0.0701589,0.000648496)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.278753,-0.00676684) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0674593,0.00688498) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000765156,-0.0276373) ,
10, -4.36318, 0, 0, 0.0131358,-4.56264e-05) ,
10, -1.26154, 0, 0, 0.0692107,-0.000898272)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.210472,-0.00718648) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0304348,0.0164816) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000216653,-0.0421365) ,
0, 4.21266, 1, 0, 0.00775194,0.000189929) ,
0, 1.72868, 1, 0, 0.0680555,-0.000943341)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.129944,0.0432369) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0694428,-0.00149028) ,
0, -1.78005, 1, 0, 0.070262,-7.9877e-05) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0046729,-0.0602104) ,
0, -2.48795, 0, 0, 0.0697295,-0.000184466)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0949172,0.00442161) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.569425,-0.0138148) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00667187,-0.00406557) ,
0, 1.93148, 1, 0, 0.0394157,-0.00146988) ,
14, -0.854934, 0, 0, 0.0692505,-5.93821e-05)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.237918,0.00510968) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0533438,-0.0085267) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0180361,0.0127149) ,
14, 1.02558, 1, 0, 0.0383095,-0.000397926) ,
11, -0.241311, 0, 0, 0.0689327,5.6438e-05)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0708309,0.000179454) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.122699,-0.038348) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0509345) ,
10, -5.90749, 0, 0, 0.01998,-0.00733925) ,
2, 2.0959, 1, 0, 0.0689069,-0.000243256)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0708808,0.000175074) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.068323,-0.064902) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00646552,-0.03724) ,
16, -2.41079, 0, 0, 0.0156107,-0.00598291) ,
11, 2.29623, 1, 0, 0.0685886,-0.000212736)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0786824,0.00521295) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.603726,-0.0104459) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00855397,-0.00114074) ,
0, 1.79201, 1, 0, 0.0607907,-0.0013554) ,
14, -0.330144, 0, 0, 0.0695169,-0.000152293)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.071489,-0.000729963) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0123457,-0.0611821) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0502369) ,
15, 7.3707, 1, 0, 0.00407332,-0.00828624) ,
2, 3.24068, 1, 0, 0.070239,-0.000299587)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.162853,0.00535596) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0761105,-0.014041) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0041475,0.00705741) ,
10, -1.40972, 0, 0, 0.0198195,-0.000727159) ,
9, -0.931952, 0, 0, 0.0708213,0.000310971)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.210813,0.0083475) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0554335,-0.00122291) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0279793,-0.0307446) ,
6, 0.833328, 1, 0, 0.0532049,-0.000646802) ,
0, -0.526587, 1, 0, 0.0685847,-0.000222976)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0789944,-0.00838094) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.48318,0.0170647) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00563515,-0.0149202) ,
15, 2.01359, 1, 0, 0.0586687,0.00105411) ,
14, 0.0892178, 1, 0, 0.0699043,-0.000586586)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.189038,0.00688358) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0012205,-0.0463716) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000496947,-0.00492126) ,
0, -0.0314242, 1, 0, 0.000604449,-0.000674967) ,
10, -4.62723, 0, 0, 0.0708545,0.000850194)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0755001,0.00275921) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.025974,-0.074181) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00129618,-0.00967382) ,
16, 4.00052, 1, 0, 0.00353565,-0.0044897) ,
4, 4.70423, 1, 0, 0.0708554,0.000262559)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.240595,0.00635224) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.182186,-0.0159953) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0119693,-0.00470743) ,
5, 0.668455, 1, 0, 0.0181854,-0.00085402) ,
0, 0.937078, 1, 0, 0.0696838,7.26178e-05)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0981187,-0.00495906) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.347395,0.0315666) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00244129,-0.00774431) ,
15, 2.12551, 1, 0, 0.017879,0.00146333) ,
14, 1.22972, 1, 0, 0.070624,-0.000368087)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.184588,0.0168742) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.113514,0.0323592) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0590484,-0.000375248) ,
10, 1.15799, 0, 0, 0.0611292,0.000282932) ,
7, 0.818209, 0, 0, 0.0715501,0.000928421)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.145759,0.00470542) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.040153,-0.0277056) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000673149,-0.0227834) ,
7, -2.89033, 0, 0, 0.00215936,-0.000800111) ,
11, -5.967, 0, 0, 0.0703267,0.00044543)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.268235,-0.00439267) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0507886,0.0201231) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00403226,-0.00536564) ,
11, -0.241311, 0, 0, 0.0112518,0.000664011) ,
5, 0.848259, 1, 0, 0.0686864,-8.02092e-05)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.268332,-0.00530712) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.03125,0.0461122) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00567888,-0.000932596) ,
11, 0.616203, 0, 0, 0.00665409,0.000232038) ,
10, -1.7926, 0, 0, 0.0686022,-0.000613604)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250626,0.00627191) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.136364,-0.00741711) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0034202,-1.18135e-05) ,
7, -1.89697, 0, 0, 0.0143498,-0.000392188) ,
11, -1.51098, 0, 0, 0.0686519,0.000507345)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.171723,0.00642833) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.137615,-0.0197634) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00643629,0.00247194) ,
11, -1.28261, 0, 0, 0.0200493,-0.000854267) ,
15, 0.975983, 1, 0, 0.0683336,0.000250642)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0836013,0.0352067) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.152638,0.0084291) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0571882,-0.00749786) ,
9, 0.684552, 0, 0, 0.0689468,-0.000780834) ,
0, -1.74736, 1, 0, 0.0692912,-0.000530793)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0998999,-0.00360637) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.182008,0.0587165) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000507035,-0.0289173) ,
10, -4.70283, 0, 0, 0.0108761,0.00197505) ,
14, 1.54634, 1, 0, 0.0716373,-4.09675e-05)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.183524,0.0103023) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.153989,0.0213657) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0578245,-0.00193639) ,
10, 0.924925, 0, 0, 0.0621051,4.3651e-05) ,
7, 0.818209, 0, 0, 0.0721536,0.000443052)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0772425,-0.00674147) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.491803,0.0371177) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0298632,0.00172166) ,
16, 0.392894, 1, 0, 0.047932,0.00207279) ,
1, 1.36405, 1, 0, 0.0702711,-0.000584649)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0731616,0.0101315) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.222709,-0.00735054) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00849468,-0.00159457) ,
10, -1.67631, 0, 0, 0.0698843,-0.00110186) ,
1, 0.705071, 0, 0, 0.0708838,-1.26527e-05)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0979512,-0.00305327) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.288433,0.0261857) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000458243,-0.0332684) ,
12, -3.56545, 0, 0, 0.0213557,0.00107671) ,
14, 1.06192, 1, 0, 0.0705909,-0.0001375)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.277868,0.0135525) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.154052,-0.0195681) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0226827,-0.00599087) ,
12, -0.307192, 0, 0, 0.0293824,-0.00108842) ,
10, -0.426435, 0, 0, 0.0700968,0.000363278)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.243453,0.0083666) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0432215,0.0228756) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0118809,-0.0143687) ,
1, 0.984944, 0, 0, 0.017654,-0.000213773) ,
0, 0.937078, 1, 0, 0.0705468,0.000807064)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.317743,-0.00640231) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0496965,0.0106147) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00306858,-0.0224907) ,
1, -0.278354, 0, 0, 0.0198896,0.000194722) ,
5, 0.473276, 1, 0, 0.0711237,-0.000579888)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0739042,-0.0140432) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.178486,0.00729779) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000950431,-0.0366523) ,
4, -1.58464, 0, 0, 0.070112,0.000454085) ,
6, 0.752623, 0, 0, 0.0706771,-0.000143367)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.134908,0.00391595) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.04,-0.0297746) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00269978,-0.0194926) ,
13, -2.45552, 0, 0, 0.00381622,-0.00120788) ,
16, 2.76156, 1, 0, 0.0684422,4.35221e-05)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.232215,0.00951995) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.190104,-0.00592045) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00279005,0.0124982) ,
10, -2.3098, 0, 0, 0.0520815,-0.000603539) ,
0, -0.345089, 1, 0, 0.0724704,-6.46435e-05)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.156791,0.00440421) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00591716,-0.117882) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000973439,-0.0258045) ,
2, 0.740353, 0, 0, 0.00103086,-0.000745112) ,
5, 3.1295, 1, 0, 0.0703801,0.000408947)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.239056,0.00641311) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.153957,0.00607847) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0168877,-0.00983961) ,
0, 0.0645405, 1, 0, 0.0385877,-0.000421727) ,
11, -0.276363, 0, 0, 0.0702172,0.000136161)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0733671,-0.00421025) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.5,0.036082) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0495174,0.000650742) ,
10, 0.807184, 0, 0, 0.0626104,0.00138151) ,
1, 0.917521, 1, 0, 0.0703346,-0.000190565)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.109663,0.0055991) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.467797,-0.0317427) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00495568,-0.00197235) ,
0, 1.83595, 1, 0, 0.0176122,-0.00144309) ,
14, -1.57357, 0, 0, 0.0718905,0.000322927)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.192502,0.00515788) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0016247,-0.0377588) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000354811,-0.0104679) ,
5, 0.425099, 1, 0, 0.000543675,-0.000610733) ,
10, -4.62723, 0, 0, 0.0715074,0.000584845)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.134314,0.00443796) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0468227,-0.034679) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0018283,-0.0187608) ,
10, -0.537239, 0, 0, 0.00287289,-0.00105018) ,
16, 3.08006, 1, 0, 0.0697169,0.00023787)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.328143,0.00588889) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0631799,-0.0127364) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0146079,0.00219774) ,
2, -0.751027, 0, 0, 0.0199087,-0.0002316) ,
5, 0.425099, 1, 0, 0.0711539,0.000425214)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0900901,0.0311224) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.072585,-0.00525653) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0684545,0.0092079) ,
1, 0.917521, 1, 0, 0.0714425,-0.00014347) ,
0, -1.69898, 1, 0, 0.0719151,8.25919e-05)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.249324,0.00423141) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0165116,-0.00749679) ,
0, 0.985036, 1, 0, 0.0696857,-8.68192e-05) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0974047) ,
2, 4.84959, 1, 0, 0.0691147,-0.000192591)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.238846,0.00926762) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.12031,0.0345814) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0351113,-0.00815533) ,
10, 1.03945, 0, 0, 0.0380603,-0.000791546) ,
11, -0.276363, 0, 0, 0.0693578,8.8389e-06)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0731089,0.0010467) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0263158,-0.0634483) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0503607) ,
15, 4.5313, 1, 0, 0.00240385,-0.00372489) ,
4, 4.94724, 1, 0, 0.0686023,-4.53879e-05)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.204813,0.0134318) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0584677,-0.00203475) ,
0, -0.733696, 1, 0, 0.0698536,9.16226e-05) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0106952,-0.0840201) ,
9, 4.58922, 1, 0, 0.0694339,-5.66148e-05)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.207467,-0.0045121) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0323259,0.0356174) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00056101,-0.0301728) ,
4, -1.47693, 0, 0, 0.00725159,0.000902899) ,
0, 1.87909, 1, 0, 0.0698798,-5.50801e-05)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.27864,-0.00703695) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0589139,0.0122437) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000838424,-0.0177264) ,
10, -4.4807, 0, 0, 0.0118435,0.000540812) ,
10, -1.38359, 0, 0, 0.0699396,-0.000504644)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.171133,0.00388027) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0775071,-0.0212573) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00707166,0.00292257) ,
5, 0.450564, 1, 0, 0.0194347,-0.00122905) ,
15, 0.975983, 1, 0, 0.067674,-0.000373057)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.238828,0.005684) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0495182,0.00901949) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.034767,-0.00848842) ,
6, 0.75225, 0, 0, 0.0372525,-0.000595481) ,
11, -0.276363, 0, 0, 0.0686767,-8.71138e-05)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.289641,-0.00476352) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0517623,0.0117412) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00106023,-0.0217253) ,
5, 2.82247, 1, 0, 0.0152643,0.000454202) ,
5, 0.687479, 1, 0, 0.0710322,-0.000243608)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.17539,-0.0116014) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.120448,0.0195879) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0550048,-0.00118011) ,
9, 0.810153, 0, 0, 0.0616561,0.000449611) ,
0, -0.878346, 1, 0, 0.0693981,0.000120297)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0972629,-0.00327322) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.322148,0.0343423) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000814143,-0.0186584) ,
12, -2.96122, 0, 0, 0.0166943,0.00163793) ,
14, 1.22972, 1, 0, 0.0697341,2.16889e-05)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0946921,0.00332258) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.12468,-0.0169183) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00160171,-0.00815377) ,
10, -2.1482, 0, 0, 0.0228578,-0.00161099) ,
3, 1.49281, 1, 0, 0.0698986,-4.28462e-05)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.071853,0.0027661) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0747126,-0.049733) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0509388) ,
12, -5.0796, 0, 0, 0.0131579,-0.0076023) ,
2, 2.0959, 1, 0, 0.0696424,0.000224456)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0761421,0.0376683) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.166022,0.0046814) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0316524,-0.00720503) ,
15, 0.479036, 1, 0, 0.0704139,-0.000163058) ,
0, -1.74736, 1, 0, 0.0705413,5.43457e-06)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0715564,0.000504249) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0613497,0.170347) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0078125,-0.0561067) ,
3, -0.513607, 1, 0, 0.0286396,0.0101709) ,
9, 3.18473, 1, 0, 0.0708683,0.000256965)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0700142,0.000305468) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0813954,0.079138) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0523738) ,
13, -8.87279, 0, 0, 0.0342298,0.0118221) ,
9, 3.31303, 1, 0, 0.0694623,0.000239709)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.315566,0.00547417) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.072663,0.012604) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0146832,-0.00819281) ,
11, 0.505924, 0, 0, 0.0214064,-0.000196472) ,
5, 0.408762, 1, 0, 0.0690182,0.000377061)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.279276,-0.00619205) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0513259,0.0109133) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000796601,-0.0376968) ,
5, 2.86676, 1, 0, 0.0149218,0.000188377) ,
5, 0.710192, 1, 0, 0.069293,-0.000610432)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.186698,-0.00682652) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0469108,0.0196115) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000546411,-0.0263558) ,
0, 3.62024, 1, 0, 0.00758848,0.000321492) ,
2, -2.2774, 0, 0, 0.0691281,-0.000836617)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0766428,-0.00716173) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.435379,0.00971965) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00412866,-0.00623241) ,
15, 2.30731, 1, 0, 0.0594291,0.000940841) ,
14, 0.0475099, 1, 0, 0.0688809,-0.000427497)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.25119,0.00906552) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.106087,-0.0119452) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0284765,0.0012617) ,
4, 0.0231151, 0, 0, 0.0384221,-0.000339473) ,
0, 0.0583935, 1, 0, 0.0705691,0.000310052)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0790393,-0.00439048) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.459091,0.0199029) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0136259,0.00223575) ,
16, 1.47161, 1, 0, 0.0458053,0.00183899) ,
1, 1.46154, 1, 0, 0.0713745,-0.000248769)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0708391,0.00289507) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.693069,-0.0281729) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.017275,0.000227744) ,
15, 1.38182, 1, 0, 0.0698869,-0.00348892) ,
6, 0.752623, 1, 0, 0.0706982,-6.41445e-05)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.253968,0.0064882) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.03463,-0.0379459) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0185286,0.00514369) ,
9, 0.959835, 0, 0, 0.0201789,-0.000149072) ,
8, -0.904071, 0, 0, 0.0707044,0.000711153)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.242938,-0.00768955) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0403685,0.0170177) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0245447,-0.00683233) ,
6, 0.75715, 0, 0, 0.0272774,-8.66677e-05) ,
11, -0.776153, 0, 0, 0.0678719,-0.000799566)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.16804,0.00944495) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.123375,0.00815107) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0425792,-0.0116184) ,
16, 0.0910307, 1, 0, 0.0603623,-0.000885061) ,
7, 0.818209, 0, 0, 0.0693024,-0.000493213)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.189318,-0.01257) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0600939,0.000821055) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0128205,-0.0344687) ,
4, 2.61812, 1, 0, 0.0572064,-7.98774e-05) ,
0, -0.741137, 1, 0, 0.0677162,-0.000430532)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.219401,-0.00599097) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.105481,0.00917734) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00047403,-0.0262425) ,
0, 3.61776, 1, 0, 0.0318583,0.00071054) ,
2, -0.572441, 0, 0, 0.0694381,1.12758e-05)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.192437,0.013148) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0589995,8.28875e-05) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0404255,-0.0346472) ,
2, 1.6058, 1, 0, 0.0586388,-0.000147676) ,
0, -0.733696, 1, 0, 0.0692711,0.000265082)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0751347,0.00199805) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.000674764,-0.019123) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0955213) ,
14, 0.72025, 0, 0, 0.000611621,-0.0038988) ,
6, 2.73915, 1, 0, 0.0705363,0.000133628)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0739422,-0.00839779) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.35333,0.00977424) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00332762,-0.0143152) ,
16, 3.16182, 1, 0, 0.0648995,0.000849797) ,
14, -0.0487062, 1, 0, 0.0698133,-0.000555584)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.261517,-0.00825347) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0180723,0.0786805) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00486266,-0.00106227) ,
9, 3.31303, 0, 0, 0.00508569,7.53588e-05) ,
10, -1.98204, 0, 0, 0.0688825,-0.00115156)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.250459,0.0102342) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.109738,-0.00894665) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00180753,0.00782869) ,
10, -1.98886, 0, 0, 0.028448,-0.000846865) ,
0, 0.427611, 1, 0, 0.0699866,0.000202428)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0786567,-0.00397889) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.496907,0.0214018) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00423953,-0.00433759) ,
15, 2.37453, 1, 0, 0.0431175,0.00240865) ,
1, 1.46154, 1, 0, 0.0703345,-5.12073e-05)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.282848,0.0058707) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0295652,-0.0290482) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0112594,0.00229514) ,
13, 0.624158, 0, 0, 0.0122726,-0.000145366) ,
10, -1.26154, 0, 0, 0.0691726,0.000581053)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.237109,-0.00641123) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0605559,0.0200832) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00478498,-0.00547896) ,
0, 0.0568749, 1, 0, 0.0133225,0.000605466) ,
11, -1.83539, 0, 0, 0.0694771,-0.000388227)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.076565,-0.0033505) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.578816,0.0139671) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00333524,-0.00738117) ,
12, -2.3478, 0, 0, 0.062345,0.001471) ,
14, 0.0333015, 1, 0, 0.0701909,0.000278527)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.248248,0.00372039) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.183465,-0.0199888) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0109478,-0.0030413) ,
5, 0.710192, 1, 0, 0.0184375,-0.000908516) ,
0, 0.859672, 1, 0, 0.0707477,-0.000286143)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.254055,0.00505616) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.061924,0.00461053) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00685536,-0.0160537) ,
16, 1.87399, 1, 0, 0.023138,-0.000450237) ,
11, -0.967344, 0, 0, 0.0698322,0.00014544)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0753043,-0.00855904) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.286991,0.0109746) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0389365,-0.00406228) ,
6, -0.098793, 0, 0, 0.0699294,0.000221576) ,
6, 0.752619, 0, 0, 0.0707343,-0.000106806)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.224277,0.00405364) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.221239,-0.0439407) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0231008,0.00014559) ,
11, -0.519887, 0, 0, 0.027425,-0.000409561) ,
13, -0.627347, 0, 0, 0.06914,8.5846e-05)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.213657,-0.00341144) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0338056,0.0214233) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000780917,-0.0197618) ,
4, -1.47693, 0, 0, 0.00811751,0.000628318) ,
0, 1.79201, 1, 0, 0.0714722,-8.54943e-05)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0693682,0.0025919) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0326797,-0.0489656) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0503076) ,
10, -9.14209, 0, 0, 0.00990099,-0.00770383) ,
2, 3.24068, 1, 0, 0.0682217,0.000318615)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.180564,0.00415713) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00332656,-0.00957889) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.002331,-0.0941345) ,
12, 0.772417, 1, 0, 0.00330092,-0.000627961) ,
13, -3.15258, 0, 0, 0.0682786,0.000278448)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.265663,-0.00493326) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0384391,0.0195846) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00105974,0.000179004) ,
10, -2.11417, 0, 0, 0.00432658,0.000446664) ,
7, -2.02901, 0, 0, 0.069386,-0.000429978)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.161955,0.00493401) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00300162,-0.0276441) ,
NNG(
0,
0,
-1, 0, 1, -99, 9.48227e-05,0.0241564) ,
7, -2.48966, 0, 0, 0.00094105,-0.000464473) ,
5, 2.98201, 1, 0, 0.0711307,0.000651232)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.189171,0.00674237) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.217009,-0.013184) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0188607,-0.000959657) ,
4, -0.628375, 0, 0, 0.0260029,-0.000320493) ,
4, -0.373525, 0, 0, 0.0717383,0.000511417)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.247354,0.0077567) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.149441,-0.00707362) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00243946,0.01645) ,
10, -2.14524, 0, 0, 0.0398047,-0.000571031) ,
0, -0.0159114, 1, 0, 0.0696181,-6.68126e-06)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.172382,0.0116788) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.075381,-0.00818276) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0395117,0.00869173) ,
14, 0.512734, 1, 0, 0.0595076,-0.000460217) ,
7, 0.818209, 0, 0, 0.0688455,-6.21132e-05)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.110658,-0.0141418) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.214141,-0.00291158) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00767069,0.0142411) ,
0, 1.8444, 1, 0, 0.0671835,0.000155268) ,
9, 1.13658, 0, 0, 0.0708424,-0.000231499)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.195611,0.00364857) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.000813339,-0.0470058) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000419668,-0.00313268) ,
0, -0.049873, 1, 0, 0.000477441,-0.000450404) ,
7, -4.18135, 0, 0, 0.0709766,0.000389482)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.270935,-0.00584447) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0278746,0.0957742) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00891795,0.0019967) ,
9, 3.72717, 0, 0, 0.00918372,0.00032767) ,
10, -1.53178, 0, 0, 0.0680148,-0.000514624)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0793833,0.00367897) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.589041,-0.0272577) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0381321,-0.00321722) ,
4, 0.288061, 0, 0, 0.0542096,-0.00109836) ,
3, -0.244999, 0, 0, 0.0674807,-0.000121604)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.190147,0.00380196) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0403121,-0.0218964) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00107439,-0.0125941) ,
7, -2.69933, 0, 0, 0.00289296,-0.000614016) ,
13, -3.15258, 0, 0, 0.0713494,0.0002535)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.165606,0.00730959) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0336066,-0.000392312) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0117925,-0.0931824) ,
13, 1.90473, 1, 0, 0.0331189,-0.000314876) ,
15, 0.430585, 1, 0, 0.0702547,0.000518484)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.298323,-0.00684127) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0831563,0.00782031) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00732917,-0.0111119) ,
11, -0.241311, 0, 0, 0.0187634,-0.000151423) ,
5, 0.473276, 1, 0, 0.0667854,-0.000867568)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.275268,0.010823) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0812009,-0.0120358) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00289328,0.00159962) ,
15, 2.56132, 1, 0, 0.0279544,-0.00108912) ,
10, -0.443128, 0, 0, 0.0685633,6.85768e-05)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.197413,0.00926206) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.179389,-0.00819959) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0139532,0.00396856) ,
4, -0.802249, 0, 0, 0.0586343,-0.000665031) ,
0, -0.741137, 1, 0, 0.0696306,-0.000341761)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.242899,-0.00662332) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.174219,0.00554763) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00530341,-0.0137327) ,
10, -1.16374, 0, 0, 0.0394942,2.73724e-05) ,
0, -0.00933679, 1, 0, 0.0687104,-0.00037868)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.245213,0.005729) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.00365497,-0.0168756) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000548659,0.0279053) ,
0, 0.859672, 1, 0, 0.00123093,-0.000136124) ,
7, -2.79702, 0, 0, 0.0712459,0.000872792)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0739018,0.0204868) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0755034,0.036122) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.069048,-0.00344792) ,
0, -1.74736, 1, 0, 0.0692056,-0.000400914) ,
10, 1.30788, 0, 0, 0.0695504,-7.21165e-05)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.286968,-0.00496817) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0511103,0.00615142) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000765697,-0.0255837) ,
0, 3.132, 1, 0, 0.0133518,-1.92194e-05) ,
5, 0.687479, 1, 0, 0.0691757,-0.000634795)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.292763,0.00326422) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0442531,-0.00732088) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000756274,0.0359064) ,
8, -2.87771, 0, 0, 0.0143627,-0.000372568) ,
5, 0.668455, 1, 0, 0.069346,9.50212e-05)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0851833,0.0146928) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0870593,-0.0033986) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00356205,0.103167) ,
9, -4.90827, 0, 0, 0.0687815,-0.000177959) ,
10, 1.30788, 0, 0, 0.0699894,6.40472e-05)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0944559,0.0289784) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0691115,0.000235957) ,
0, -1.76415, 1, 0, 0.0695821,0.000198458) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0884694) ,
2, 5.04462, 1, 0, 0.0690373,0.000121334)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.270751,-0.00737158) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.050592,0.00372844) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000420118,-0.0292097) ,
10, -4.55363, 0, 0, 0.00956914,-0.00013057) ,
10, -1.40972, 0, 0, 0.0673977,-0.00102613)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.178706,0.00651776) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0202543,-0.00212035) ,
NNG(
0,
0,
-1, 0, 1, -99, 0,-0.0985419) ,
12, 1.02508, 1, 0, 0.0199151,-0.000372516) ,
15, 1.00422, 1, 0, 0.0714804,0.000551723)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.213838,0.00534174) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0133748,-0.024459) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000808353,0.0370035) ,
5, 0.71766, 1, 0, 0.0030454,-0.00029499) ,
8, -2.55806, 0, 0, 0.0702621,0.000701473)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.220209,-0.00639022) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0456836,0.0152882) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00374042,-0.00345292) ,
0, 0.110323, 1, 0, 0.010306,0.000440369) ,
11, -2.25084, 0, 0, 0.0678044,-0.000571802)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.239019,0.00938001) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0926043,0.00802456) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00681977,-0.0169403) ,
10, -0.20298, 0, 0, 0.0201772,-0.000317423) ,
0, 0.815997, 1, 0, 0.0689536,0.000721271)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.243086,0.0116748) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.323899,0.00585099) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0188606,-0.00430511) ,
7, -0.642652, 0, 0, 0.0407454,-2.1265e-05) ,
11, -0.241311, 0, 0, 0.0724775,0.000819682)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0729461,-0.000174515) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.296943,-0.0219133) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000805802,-0.020451) ,
15, 3.50719, 1, 0, 0.0469388,-0.004143) ,
2, 1.57197, 1, 0, 0.0715066,-0.000260691)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.137886,0.00410865) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.025368,-0.0290103) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00228959,0.0141749) ,
10, -1.40972, 0, 0, 0.00751134,-0.000658537) ,
9, -1.68007, 0, 0, 0.068303,0.000304521)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0718838,-0.0156721) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.199695,0.0108963) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0376663,-0.00124271) ,
13, -0.172535, 0, 0, 0.0707839,0.00080306) ,
6, 0.747719, 0, 0, 0.0709472,0.000174411)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.10269,0.0139492) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0629472,-0.00416975) ,
15, -0.552127, 1, 0, 0.0710269,0.000148975) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0102041,0.412174) ,
10, -38.1407, 0, 0, 0.0705711,0.000215996)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.176211,-0.0134575) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.244207,0.00832591) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0151139,-0.00816285) ,
2, -1.50889, 0, 0, 0.0544858,0.000259364) ,
2, 0.292362, 0, 0, 0.0702723,-0.000385525)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.096933,0.00652262) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.394737,-0.0343181) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0326331,-0.00131715) ,
4, 0.797892, 0, 0, 0.0393611,-0.000798257) ,
14, -0.854934, 0, 0, 0.0702609,0.000450248)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.10649,-0.0172463) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.15536,0.00625084) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000730407,-0.0290102) ,
5, 3.31057, 1, 0, 0.0671831,0.000735186) ,
9, 1.13658, 0, 0, 0.0704661,0.000288097)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.251132,-0.00548379) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.128693,0.0121057) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0011409,-0.0136446) ,
10, -2.51328, 0, 0, 0.0194872,0.000619771) ,
11, -1.3406, 0, 0, 0.0717474,-0.000143058)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0750275,0.00287421) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0103627,-0.0774581) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000677048,-0.00859014) ,
11, -5.17278, 0, 0, 0.00179641,-0.00289275) ,
4, 4.94724, 1, 0, 0.0703564,0.000335456)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0955533,0.00664511) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.391304,-0.0432853) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.035012,-0.00414632) ,
2, 0.398855, 0, 0, 0.0410277,-0.00105027) ,
14, -0.825111, 0, 0, 0.0699977,0.000310129)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.215686,-0.00346414) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.021987,0.0578162) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000967586,-0.00558551) ,
10, -3.78798, 0, 0, 0.00242063,0.000446181) ,
12, -2.68143, 0, 0, 0.0709729,-0.000289661)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.221291,0.00972705) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.170195,-0.00872757) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0131735,0.00395792) ,
4, -0.80225, 0, 0, 0.0523492,-0.000658577) ,
0, -0.462897, 1, 0, 0.0698951,-0.00019507)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0744362,0.00628543) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.520076,-0.0220843) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0476905,-0.00222379) ,
4, 0.568536, 0, 0, 0.065517,-0.00111851) ,
14, -0.233928, 0, 0, 0.0697788,-1.86474e-05)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0720087,0.0227474) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.306306,0.00402689) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0512153,-0.00547011) ,
12, 0.350397, 0, 0, 0.0697484,-0.000549597) ,
10, 1.40667, 0, 0, 0.0699072,-0.000209972)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0896159,0.0270122) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0697214,0.00238816) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.066838,-0.0148897) ,
6, 0.833328, 1, 0, 0.069374,1.71919e-05) ,
0, -1.66762, 1, 0, 0.0699103,0.000185772)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.134854,0.00330692) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0525114,-0.0270337) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000795608,-0.0212819) ,
10, -1.23337, 0, 0, 0.0025371,-0.000937731) ,
16, 2.98836, 1, 0, 0.0696061,8.49518e-05)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.108333,0.0162919) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0924382,-0.0053031) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0346139,0.0143821) ,
14, 0.645037, 1, 0, 0.0678997,-2.4643e-05) ,
10, 1.09309, 0, 0, 0.071217,0.000313899)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.171138,-0.0104064) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.272816,0.00678542) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00271349,-0.00696191) ,
10, -2.51328, 0, 0, 0.0607086,0.000689606) ,
7, 0.763187, 0, 0, 0.0698574,0.000300047)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.273536,-0.00673698) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0372881,0.0829159) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00922564,0.00516895) ,
9, 3.64748, 0, 0, 0.00962608,0.0005939) ,
10, -1.53178, 0, 0, 0.0686768,-0.000402798)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.215299,-0.00309522) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0213646,0.0234525) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00060241,-0.0192265) ,
10, -3.93257, 0, 0, 0.00227134,3.00698e-05) ,
12, -2.50913, 0, 0, 0.0690875,-0.000497195)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0790069,-0.00322257) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.371345,0.0177627) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00094038,-0.0101091) ,
7, -2.89537, 0, 0, 0.0431595,0.002195) ,
1, 1.46154, 1, 0, 0.0708401,2.53996e-05)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.196991,0.00634045) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0434783,-0.0144958) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.000803312,-0.00458901) ,
7, -2.97744, 0, 0, 0.00352866,-0.000396679) ,
13, -2.74289, 0, 0, 0.0705971,0.000746041)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.204301,-0.00623045) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0462012,-0.02125) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00334848,0.0163559) ,
0, 2.4977, 1, 0, 0.00570686,0.000149251) ,
0, 2.0146, 1, 0, 0.0704274,-0.000877951)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.285921,0.00394445) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0296496,0.0961925) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0124153,-0.00515679) ,
9, 3.31303, 0, 0, 0.0127235,-0.000218875) ,
10, -1.26154, 0, 0, 0.0702956,0.000301244)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.25194,0.00485304) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.124408,0.0168805) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0261172,-0.00370413) ,
10, 0.68154, 0, 0, 0.0299721,-0.000158502) ,
11, -0.642939, 0, 0, 0.0702248,0.000305763)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.281168,-0.00576099) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.0635965,0.0382237) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.0102482,0.00438425) ,
12, -0.0326249, 0, 0, 0.0114316,0.000601155) ,
10, -1.38359, 0, 0, 0.0698826,-0.000255577)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.117674,0.00598064) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.506849,-0.0135831) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.00831601,-0.00581698) ,
0, -0.0170024, 1, 0, 0.0219443,-0.000622429) ,
1, -0.922025, 0, 0, 0.0691109,0.000549628)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back(
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.285944,0.00499377) ,
NNG(
NNG(
0,
0,
-1, 0, 1, -99, 0.115311,-0.0111242) ,
NNG(
0,
0,
-1, 0, 1, -99, 0.013517,-0.000977588) ,
13, -1.11733, 0, 0, 0.0256749,-0.000545307) ,
7, -0.543983, 0, 0, 0.0687923,4.28938e-05)    );
   return;
};

// Clean up
inline void ReadBDTG::Clear()
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) {
      delete fForest[itree];
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
