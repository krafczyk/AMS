/*! \example ana.root_staticp.doc
 *  The program below (aligmct.C) (aligdata.C) illustrates a way to analyze AMS Root 
 *  files in a parallel way using OPENMP enabled compiler (icc, gcc 4.2++). The parallelization is done on the level of root files, and not events. 
 *    - To compile and link it  you can use  script
 *                -   setenv AMSINCLUDE /Offline/vdev/  
 *                -  l64o.sh ( l32g.sh if using 32bit gcc root version) aligmct  
 *    
 *    - To run it use $AMSWD/aligmct -tthreadnumber -ffile_output_name  
 * 
 *     -  where threadnumber is the integer between 1 and number of cores of a given machine. You should avoid to use threadnumber>2 on a public ams machine. 
 *      
*
*The performance of the multithreaded application is not linear w/r number of threads as usually driven by i/o. 
*
* The golden number of threads is therefore often close to number_of_different_filesystems_used +1 . 
*
*The elapsed time performance gain may be as high as 300-400% for 4-8 threads on 8 core machines w/r single thread one.              
 *
*  -    Note that this mode is primarily designed for the massive data analysis with number of root files at least O(100) 
*
 *    - Note that the program is prepared to be run in batch mode. 
 *    - Note  that this is the only mode in which track refit can be done in version 4.00 tracksr software
 *
 *  \include aligdata.C
 */ 
