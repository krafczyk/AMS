/*! \example ana.root_ruby.doc
 *
 *    - Example of AMS analysis with Ruby. To run it:
 *                 - setenv ROOTSYS /afs/cern.ch/exp/ams/Offline/root/Linux/new
 *                 - setenv LD_LIBRARY_PATH $LD_LIBRARY_PATH:$ROOTSYS/lib
 *                 - ana.root.rb
 *
 *    - You can find few other examples in $AMSDir/ruby
 *
 *    - Installation of the AMS Ruby library (only on LINUX for the moment):
 *       - Locally: "cd $AMSDir/ruby; gmake"
 *       - For all users in the machine: "cd $AMSDir/ruby; gmake; gmake install"
 *
 *    - If you want to see graphics, you have to start an application, 
 *      using "TApplication.new" or even "TRint.new", and then run it at the end
 *      with "app.Run". Example:
 *            - app = TApplication.new("My Application",0,[])
 *            - ...
 *            - app.Run
 *
 *    - Global variables like gROOT are accessed as "ROOT::gROOT". Examples:
 *            - ROOT::gROOT.Reset
 *            - ROOT::gStyle.SetOptLogy(1)
 *
 *    - Constants in Ruby begin with a capital letter. This means that you must 
 *      use "KFalse, KTrue, KBlue, ...", and not "kFalse, kTrue, kBlue, ...". 
 *
 *    - ROOT methods destroying objects, like "my_file.Close" will give errors.
 *      Ruby applies its automatic procedures to destroy them and, in this 
 *      case, will find out that there is no object to destroy.
 *
 *    - When a method returns a TObject object, you must convert its type into 
 *      a useful one with the "to_<class>" method. A typical case involves 
 *      the "TFile::Get" method. Example:
 *            - input_file = TFile.new("test.root")
 *            - hist = input_file.Get("Test").to_TH1F
 *
 *    - You can use Ruby arrays whenever ROOT expects a C-Float array as input. 
 *      Example:
 *            - a = [0.0, 1.0, 2.0]
 *            - b = [-1.0, 0.0, 1.0]
 *            - my_graph = TGraph.new(3, a, b)
 *
 *    - Whenever an Int_t, Float_t or Double_t argument is passed by reference, it 
 *      is assumed to be INPUT/OUTPUT. From the practical point of view:
 *            - gr = ROOT::gRandom
 *            - xin, yin = 0.0, 0.0
 *            - xout, yout = gr.Rannor(xin,yin)
 *      
 *  \include ana.root.rb
 */ 
